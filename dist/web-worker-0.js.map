{"version":3,"file":"index.js","sources":["src/worker/Requests.js","src/worker/index.js"],"sourcesContent":["\r\nconst\t_self = self || window,\r\n\t\tserverBase = _self.serverBase || '//maps.kosmosnimki.ru/',\r\n\t\tserverProxy = serverBase + 'Plugins/ForestReport/proxy';\r\n\r\nlet loaderStatus = {};\r\nlet _sessionKeys = {};\r\nlet _app = {};\r\n\r\nconst parseURLParams = (str) => {\r\n\tlet sp = new URLSearchParams(str || location.search),\r\n\t\tout = {},\r\n\t\tarr = [];\r\n\tfor (let p of sp) {\r\n\t\tlet k = p[0], z = p[1];\r\n\t\tif (z) {\r\n\t\t\tif (!out[k]) {out[k] = [];}\r\n\t\t\tout[k].push(z);\r\n\t\t} else {\r\n\t\t\tarr.push(k);\r\n\t\t}\r\n\t}\r\n\treturn {main: arr, keys: out};\r\n};\r\n\r\nconst requestSessionKey = (serverHost, apiKey) => {\r\n\tlet keys = _sessionKeys;\r\n\tif (!(serverHost in keys)) {\r\n\t\tkeys[serverHost] = new Promise(function(resolve, reject) {\r\n\t\t\tif (apiKey) {\r\n\t\t\t\tutils.getJson({\r\n\t\t\t\t\turl: '//' + serverHost + '/ApiKey.ashx',\r\n\t\t\t\t\tparams: {WrapStyle: 'None', Key: apiKey}\r\n\t\t\t\t})\r\n\t\t\t\t\t.then(function(json) {\r\n\t\t\t\t\t\tlet res = json.res;\r\n\t\t\t\t\t\tif (res.Status === 'ok' && res.Result) {\r\n\t\t\t\t\t\t\tresolve(res.Result.Key !== 'null' ? '' : res.Result.Key);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treject(json);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(function() {\r\n\t\t\t\t\t\tresolve('');\r\n\t\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tresolve('');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn keys[serverHost];\r\n};\r\n\r\nconst getMapTree = (params) => {\r\n\tparams = params || {};\r\nconsole.log('parseURLParams', parseURLParams(params.search));\r\n\r\n\tlet url = `${serverBase}Map/GetMapFolder`;\r\n\turl += '?mapId=' + (params.mapId || 'C8612B3A77D84F3F87953BEF17026A5F');\r\n\turl += '&folderId=root';\r\n\turl += '&srs=3857'; \r\n\turl += '&skipTiles=All';\r\n\turl += '&visibleItemOnly=false';\r\n\r\n\tloaderStatus[url] = true;\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: 'get',\r\n\t\tmode: 'cors',\r\n\t\tcredentials: 'include',\r\n\t\t// headers: {'Accept': 'application/json'},\r\n\t\t// body: JSON.stringify(params)\t// TODO: сервер почему то не хочет работать так https://googlechrome.github.io/samples/fetch-api/fetch-post.html\r\n\t})\r\n\t\t.then(res => {\r\n\t\t\tdelete loaderStatus[url];\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then(json => {\r\n\t\t\treturn parseTree(json);\r\n\t\t})\r\n\t\t.catch(err => console.warn(err));\r\n};\r\n\r\nconst _iterateNodeChilds = (node, level, out) => {\r\n\tlevel = level || 0;\r\n\tout = out || {\r\n\t\tlayers: []\r\n\t};\r\n\t\r\n\tif (node) {\r\n\t\tlet type = node.type,\r\n\t\t\tcontent = node.content,\r\n\t\t\tprops = content.properties;\r\n\t\tif (type === 'layer') {\r\n\t\t\tlet ph = { level: level, properties: props };\r\n\t\t\tif (content.geometry) { ph.geometry = content.geometry; }\r\n\t\t\tout.layers.push(ph);\r\n\t\t} else if (type === 'group') {\r\n\t\t\tlet childs = content.children || [];\r\n\t\t\tout.layers.push({ level: level, group: true, childsLen: childs.length, properties: props });\r\n\t\t\tchilds.map((it) => {\r\n\t\t\t\t_iterateNodeChilds(it, level + 1, out);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t} else {\r\n\t\treturn out;\r\n\t}\r\n\treturn out;\r\n};\r\n\r\nconst parseTree = (json) => {\r\n\tlet out = {};\r\n\tif (json.Status === 'error') {\r\n\t\tout = json;\r\n\t} else if (json.Result && json.Result.content) {\r\n\t\tout = _iterateNodeChilds(json.Result);\r\n\t\tout.mapAttr = out.layers.shift();\r\n\t}\r\n// console.log('______json_out_______', out, json)\r\n\treturn out;\r\n};\r\nconst getReq = url => {\r\n\treturn fetch(url, {\r\n\t\t\tmethod: 'get',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: 'include'\r\n\t\t// headers: {'Accept': 'application/json'},\r\n\t\t// body: JSON.stringify(params)\t// TODO: сервер почему то не хочет работать так https://googlechrome.github.io/samples/fetch-api/fetch-post.html\r\n\t\t})\r\n\t\t.then(res => res.json())\r\n\t\t.catch(err => console.warn(err));\r\n};\r\n\r\nconst getLayerItems = (params) => {\r\n\tparams = params || {};\r\n\r\n\tlet url = `${serverBase}VectorLayer/Search.ashx`;\r\n\turl += '?layer=' + params.layerID;\r\n\tif (params.id) { '&query=gmx_id=' + params.id; }\r\n\r\n\turl += '&out_cs=EPSG:4326';\r\n\turl += '&geometry=true';\r\n\treturn getReq(url);\r\n};\r\nconst getReportsCount = () => {\r\n\treturn getReq(serverProxy + '?path=/rest/v1/get-current-user-info');\r\n};\r\n\r\nexport default {\r\n\tparseURLParams,\r\n\tgetMapTree,\r\n\tgetReportsCount,\r\n\tgetLayerItems\r\n};","import Requests from './Requests.js';\r\n\r\nvar _self = self;\r\n(_self.on || _self.addEventListener).call(_self, 'message', e => {\r\n    const message = e.data || e;\r\nconsole.log('message ', e);\r\n    switch (message.cmd) {\r\n\t\tcase 'getLayerItems':\r\n\t\t\tRequests.getLayerItems({layerID: message.layerID}).then((json) => {\r\n\t\t\t\tmessage.out = json;\r\n\t\t\t\tlet pt = {};\r\n\t\t\t\tjson.Result.fields.forEach((name, i) => { pt[name] = i; });\r\n\t\t\t\tjson.Result.fieldKeys = pt;\r\n\t\t\t\t_self.postMessage(message);\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\tcase 'getMap':\r\n\t\t\tRequests.getMapTree({mapId: message.mapID, search: message.search}).then((json) => {\r\n\t\t\t\tmessage.out = json;\r\n\t\t\t\t_self.postMessage(message);\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\tcase 'getReportsCount':\r\n\t\t\tRequests.getReportsCount().then((json) => {\r\n\t\t\t\tmessage.out = json;\r\n\t\t\t\t_self.postMessage(message);\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.warn('Неизвестная команда:', message.cmd);\r\n\t\t\tbreak;\r\n\t}\r\n});\r\n\r\n"],"names":["_self","self","window","serverBase","serverProxy","parseURLParams","str","sp","URLSearchParams","location","search","out","arr","p","k","z","push","main","keys","getMapTree","params","console","log","url","mapId","loaderStatus","fetch","method","mode","credentials","then","res","json","parseTree","catch","err","warn","_iterateNodeChilds","node","level","layers","type","content","props","properties","ph","geometry","childs","children","group","childsLen","length","map","it","Status","Result","mapAttr","shift","getReq","getLayerItems","layerID","id","getReportsCount","on","addEventListener","call","e","message","data","cmd","Requests","pt","fields","forEach","name","i","fieldKeys","postMessage","mapID"],"mappings":"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"}
{"version":3,"file":"index.js","sources":["../scripts/WorkerLoaderHelper.js","../src/worker/Requests.js","../src/index.js"],"sourcesContent":["const kIsNodeJS = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\r\nconst kRequire = kIsNodeJS ? module.require : null; // eslint-disable-line\r\n\r\nexport function createInlineWorkerFactory(fn, sourcemap = null) {\r\n    const source = fn.toString();\r\n    const start = source.indexOf('\\n', 10) + 1;\r\n    const end = source.indexOf('}', source.length - 1);\r\n    const body = source.substring(start, end) + (sourcemap ? `//# sourceMappingURL=${sourcemap}` : '');\r\n    const blankPrefixLength = body.search(/\\S/);\r\n    const lines = body.split('\\n').map(line => line.substring(blankPrefixLength) + '\\n');\r\n\r\n    if (kIsNodeJS) {\r\n        /* node.js */\r\n        const Worker = kRequire('worker_threads').Worker; // eslint-disable-line\r\n        const concat = lines.join('\\n');\r\n        return function WorkerFactory(options) {\r\n            return new Worker(concat, Object.assign({}, options, { eval: true }));\r\n        };\r\n    }\r\n\r\n    /* browser */\r\n    const blob = new Blob(lines, { type: 'application/javascript' });\r\n    const url = URL.createObjectURL(blob);\r\n    return function WorkerFactory(options) {\r\n        return new Worker(url, options);\r\n    };\r\n}\r\n\r\nexport function createURLWorkerFactory(url) {\r\n    if (kIsNodeJS) {\r\n        /* node.js */\r\n        const Worker = kRequire('worker_threads').Worker; // eslint-disable-line\r\n        return function WorkerFactory(options) {\r\n            return new Worker(url, options);\r\n        };\r\n    }\r\n    /* browser */\r\n    return function WorkerFactory(options) {\r\n        return new Worker(url, options);\r\n    };\r\n}\r\n\r\nexport function createBase64WorkerFactory(base64, sourcemap = null) {\r\n    const source = kIsNodeJS ? Buffer.from(base64, 'base64').toString('ascii') : atob(base64);\r\n    const start = source.indexOf('\\n', 10) + 1;\r\n    const body = source.substring(start) + (sourcemap ? `//# sourceMappingURL=${sourcemap}` : '');\r\n\r\n    if (kIsNodeJS) {\r\n        /* node.js */\r\n        const Worker = kRequire('worker_threads').Worker; // eslint-disable-line\r\n        return function WorkerFactory(options) {\r\n            return new Worker(body, Object.assign({}, options, { eval: true }));\r\n        };\r\n    }\r\n\r\n    /* browser */\r\n    const blob = new Blob([body], { type: 'application/javascript' });\r\n    const url = URL.createObjectURL(blob);\r\n    return function WorkerFactory(options) {\r\n        return new Worker(url, options);\r\n    };\r\n}\r\n","\r\nconst\t_self = self || window,\r\n\t\tserverBase = _self.serverBase || '//maps.kosmosnimki.ru/',\r\n\t\tserverProxy = serverBase + 'Plugins/ForestReport/proxy';\r\n\r\nlet loaderStatus = {};\r\nlet _sessionKeys = {};\r\nlet _app = {};\r\n\r\nconst parseURLParams = (str) => {\r\n\tlet sp = new URLSearchParams(str || location.search),\r\n\t\tout = {},\r\n\t\tarr = [];\r\n\tfor (let p of sp) {\r\n\t\tlet k = p[0], z = p[1];\r\n\t\tif (z) {\r\n\t\t\tif (!out[k]) {out[k] = [];}\r\n\t\t\tout[k].push(z);\r\n\t\t} else {\r\n\t\t\tarr.push(k);\r\n\t\t}\r\n\t}\r\n\treturn {main: arr, keys: out};\r\n};\r\n\r\nconst requestSessionKey = (serverHost, apiKey) => {\r\n\tlet keys = _sessionKeys;\r\n\tif (!(serverHost in keys)) {\r\n\t\tkeys[serverHost] = new Promise(function(resolve, reject) {\r\n\t\t\tif (apiKey) {\r\n\t\t\t\tutils.getJson({\r\n\t\t\t\t\turl: '//' + serverHost + '/ApiKey.ashx',\r\n\t\t\t\t\tparams: {WrapStyle: 'None', Key: apiKey}\r\n\t\t\t\t})\r\n\t\t\t\t\t.then(function(json) {\r\n\t\t\t\t\t\tlet res = json.res;\r\n\t\t\t\t\t\tif (res.Status === 'ok' && res.Result) {\r\n\t\t\t\t\t\t\tresolve(res.Result.Key !== 'null' ? '' : res.Result.Key);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treject(json);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(function() {\r\n\t\t\t\t\t\tresolve('');\r\n\t\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tresolve('');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn keys[serverHost];\r\n};\r\n\r\nconst getMapTree = (params) => {\r\n\tparams = params || {};\r\nconsole.log('parseURLParams', parseURLParams(params.search));\r\n\r\n\tlet url = `${serverBase}Map/GetMapFolder`;\r\n\turl += '?mapId=' + (params.mapId || 'C8612B3A77D84F3F87953BEF17026A5F');\r\n\turl += '&folderId=root';\r\n\turl += '&srs=3857'; \r\n\turl += '&skipTiles=All';\r\n\turl += '&visibleItemOnly=false';\r\n\r\n\tloaderStatus[url] = true;\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: 'get',\r\n\t\tmode: 'cors',\r\n\t\tcredentials: 'include',\r\n\t\t// headers: {'Accept': 'application/json'},\r\n\t\t// body: JSON.stringify(params)\t// TODO: сервер почему то не хочет работать так https://googlechrome.github.io/samples/fetch-api/fetch-post.html\r\n\t})\r\n\t\t.then(res => {\r\n\t\t\tdelete loaderStatus[url];\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then(json => {\r\n\t\t\treturn parseTree(json);\r\n\t\t})\r\n\t\t.catch(err => console.warn(err));\r\n};\r\n\r\nconst _iterateNodeChilds = (node, level, out) => {\r\n\tlevel = level || 0;\r\n\tout = out || {\r\n\t\tlayers: []\r\n\t};\r\n\t\r\n\tif (node) {\r\n\t\tlet type = node.type,\r\n\t\t\tcontent = node.content,\r\n\t\t\tprops = content.properties;\r\n\t\tif (type === 'layer') {\r\n\t\t\tlet ph = { level: level, properties: props };\r\n\t\t\tif (content.geometry) { ph.geometry = content.geometry; }\r\n\t\t\tout.layers.push(ph);\r\n\t\t} else if (type === 'group') {\r\n\t\t\tlet childs = content.children || [];\r\n\t\t\tout.layers.push({ level: level, group: true, childsLen: childs.length, properties: props });\r\n\t\t\tchilds.map((it) => {\r\n\t\t\t\t_iterateNodeChilds(it, level + 1, out);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t} else {\r\n\t\treturn out;\r\n\t}\r\n\treturn out;\r\n};\r\n\r\nconst parseTree = (json) => {\r\n\tlet out = {};\r\n\tif (json.Status === 'error') {\r\n\t\tout = json;\r\n\t} else if (json.Result && json.Result.content) {\r\n\t\tout = _iterateNodeChilds(json.Result);\r\n\t\tout.mapAttr = out.layers.shift();\r\n\t}\r\n// console.log('______json_out_______', out, json)\r\n\treturn out;\r\n};\r\nconst getReq = url => {\r\n\treturn fetch(url, {\r\n\t\t\tmethod: 'get',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: 'include'\r\n\t\t// headers: {'Accept': 'application/json'},\r\n\t\t// body: JSON.stringify(params)\t// TODO: сервер почему то не хочет работать так https://googlechrome.github.io/samples/fetch-api/fetch-post.html\r\n\t\t})\r\n\t\t.then(res => res.json())\r\n\t\t.catch(err => console.warn(err));\r\n};\r\n\r\nconst getLayerItems = (params) => {\r\n\tparams = params || {};\r\n\r\n\tlet url = `${serverBase}VectorLayer/Search.ashx`;\r\n\turl += '?layer=' + params.layerID;\r\n\tif (params.id) { '&query=gmx_id=' + params.id; }\r\n\r\n\turl += '&out_cs=EPSG:4326';\r\n\turl += '&geometry=true';\r\n\treturn getReq(url);\r\n};\r\nconst getReportsCount = () => {\r\n\treturn getReq(serverProxy + '?path=/rest/v1/get-current-user-info');\r\n};\r\n\r\nexport default {\r\n\tparseURLParams,\r\n\tgetMapTree,\r\n\tgetReportsCount,\r\n\tgetLayerItems\r\n};","import DataWorker from 'web-worker:./worker';\r\nimport Requests from './worker/Requests.js';\r\n \r\nconst dataWorker = new DataWorker();\r\n\r\n//dataWorker.postMessage('Hello World!');\r\nconst Utils = {\r\n\tsaveState: (data, key) => {\r\n\t\tkey = key || 'Forest_';\r\n\t\twindow.localStorage.setItem(key, JSON.stringify(data));\r\n\t},\r\n\tgetState: key => {\r\n\t\tkey = key || 'Forest_';\r\n\t\treturn JSON.parse(window.localStorage.getItem(key)) || {};\r\n\t},\r\n\r\n\tisDelynkaLayer: (it) => {\r\n\t\tlet out = false;\r\n\t\tif (it._gmx) {\r\n\t\t\tlet attr = it._gmx.tileAttributeTypes;\r\n\t\t\tout = attr.snap && attr.FRSTAT;\r\n\t\t}\r\n\t\treturn out;\r\n\t},\r\n\tisKvartalLayer: (it) => {\r\n\t\tlet out = false;\r\n\t\tif (it._gmx) {\r\n\t\t\tlet attr = it._gmx.tileAttributeTypes;\r\n\t\t\tout = attr.kv;\r\n\t\t}\r\n\t\treturn out;\r\n\t},\r\n\tgetLayerItems: (it, opt) => {\r\n\t\tdataWorker.onmessage = (res) => {\r\n\t\t\tlet data = res.data,\r\n\t\t\t\tcmd = data.cmd,\r\n\t\t\t\tjson = data.out,\r\n\t\t\t\ttype = opt && opt.type || 'delynka';\r\n\r\n\t\t\tif (cmd === 'getLayerItems') {\r\n\t\t\t\tif (type === 'delynka') {\r\n\t\t\t\t\tdelItems.set(json.Result);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tkvItems.set(json.Result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// console.log('onmessage', res);\r\n\t\t};\r\n\t\tdataWorker.postMessage({cmd: 'getLayerItems', layerID: it.options.layerID, opt: opt});\r\n\t},\r\n\tgetReportsCount: (opt) => {\r\n\t\tdataWorker.onmessage = (res) => {\r\n\t\t\tlet data = res.data,\r\n\t\t\t\tcmd = data.cmd,\r\n\t\t\t\tjson = data.out;\r\n\r\n\t\t\tif (cmd === 'getReportsCount') {\r\n\t\t\t\treportsCount.set(json);\r\n\t\t\t}\r\n\t\t};\r\n\t\tdataWorker.postMessage({cmd: 'getReportsCount', opt: opt});\r\n\t},\r\n\tgetMap: (opt) => {\r\n        return new Promise((resolve, reject) => {\r\n\r\n\t\t\tdataWorker.onmessage = (res) => {\r\n\t\t\t\tlet data = res.data,\r\n\t\t\t\t\tcmd = data.cmd,\r\n\t\t\t\t\tjson = data.out;\r\n\r\n\t\t\t\tif (cmd === 'getMap') {\r\n\t\t\t\t\tmapTree.set(json);\r\n\t\t\t\t}\r\n\t\t// console.log('onmessage', json);\r\n\t\t\t};\r\n\t\t\tlet pars = Requests.parseURLParams(location.search);\r\n\t\t\tdataWorker.postMessage({cmd: 'getMap', mapID: pars.main.length ? pars.main[0] : mapID, search: location.search});\r\n\t\t});\r\n\t}\r\n\r\n};\r\n\r\nexport {dataWorker, Utils};\r\n"],"names":["_self","self","window","serverBase","serverProxy","parseURLParams","str","sp","URLSearchParams","location","search","out","arr","p","k","z","push","main","keys","getMapTree","params","console","log","url","mapId","loaderStatus","fetch","method","mode","credentials","then","res","json","parseTree","catch","err","warn","_iterateNodeChilds","node","level","layers","type","content","props","properties","ph","geometry","childs","children","group","childsLen","length","map","it","Status","Result","mapAttr","shift","getReq","getLayerItems","layerID","id","getReportsCount","dataWorker","DataWorker","Utils","saveState","data","key","localStorage","setItem","JSON","stringify","getState","parse","getItem","isDelynkaLayer","_gmx","attr","tileAttributeTypes","snap","FRSTAT","isKvartalLayer","kv","opt","onmessage","cmd","delItems","set","kvItems","postMessage","options","reportsCount","getMap","Promise","resolve","reject","mapTree","pars","Requests","mapID"],"mappings":"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"}
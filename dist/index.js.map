{"version":3,"file":"index.js","sources":["../scripts/WorkerLoaderHelper.js","../src/worker/Requests.js","../src/index.js"],"sourcesContent":["const kIsNodeJS = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'; // eslint-disable-line\nconst kRequire = kIsNodeJS ? module.require : null; // eslint-disable-line\n\nexport function createInlineWorkerFactory(fn, sourcemap = null) {\n    const source = fn.toString();\n    const start = source.indexOf('\\n', 10) + 1;\n    const end = source.indexOf('}', source.length - 1);\n    const body = source.substring(start, end) + (sourcemap ? `//# sourceMappingURL=${sourcemap}` : '');\n    const blankPrefixLength = body.search(/\\S/);\n    const lines = body.split('\\n').map(line => line.substring(blankPrefixLength) + '\\n');\n\n    if (kIsNodeJS) {\n        /* node.js */\n        const Worker = kRequire('worker_threads').Worker; // eslint-disable-line\n        const concat = lines.join('\\n');\n        return function WorkerFactory(options) {\n            return new Worker(concat, Object.assign({}, options, { eval: true }));\n        };\n    }\n\n    /* browser */\n    const blob = new Blob(lines, { type: 'application/javascript' });\n    const url = URL.createObjectURL(blob);\n    return function WorkerFactory(options) {\n        return new Worker(url, options);\n    };\n}\n\nexport function createURLWorkerFactory(url) {\n    if (kIsNodeJS) {\n        /* node.js */\n        const Worker = kRequire('worker_threads').Worker; // eslint-disable-line\n        return function WorkerFactory(options) {\n            return new Worker(url, options);\n        };\n    }\n    /* browser */\n    return function WorkerFactory(options) {\n        return new Worker(url, options);\n    };\n}\n\nexport function createBase64WorkerFactory(base64, sourcemap = null) {\n    const source = kIsNodeJS ? Buffer.from(base64, 'base64').toString('ascii') : atob(base64); // eslint-disable-line\n    const start = source.indexOf('\\n', 10) + 1;\n    const body = source.substring(start) + (sourcemap ? `//# sourceMappingURL=${sourcemap}` : '');\n\n    if (kIsNodeJS) {\n        /* node.js */\n        const Worker = kRequire('worker_threads').Worker; // eslint-disable-line\n        return function WorkerFactory(options) {\n            return new Worker(body, Object.assign({}, options, { eval: true }));\n        };\n    }\n\n    /* browser */\n    const blob = new Blob([body], { type: 'application/javascript' });\n    const url = URL.createObjectURL(blob);\n    return function WorkerFactory(options) {\n        return new Worker(url, options);\n    };\n}\n","\r\nconst\t_self = self || window,\r\n\t\tserverBase = _self.serverBase || '//maps.kosmosnimki.ru/',\r\n\t\tserverProxy = serverBase + 'Plugins/ForestReport/proxy';\r\n\r\nlet _app = {},\r\n\tloaderStatus = {},\r\n\t_sessionKeys = {},\r\n\tstr = self.location.origin || '',\r\n\t_protocol = str.substring(0, str.indexOf('/')),\r\n\tsyncParams = {},\r\n\tfetchOptions = {\r\n\t\t// method: 'post',\r\n\t\t// headers: {'Content-type': 'application/x-www-form-urlencoded'},\r\n\t\tmode: 'cors',\r\n\t\tredirect: 'follow',\r\n\t\tcredentials: 'include'\r\n\t};\r\n\r\nconst parseURLParams = (str) => {\r\n\tlet sp = new URLSearchParams(str || location.search),\r\n\t\tout = {},\r\n\t\tarr = [];\r\n\tfor (let p of sp) {\r\n\t\tlet k = p[0], z = p[1];\r\n\t\tif (z) {\r\n\t\t\tif (!out[k]) {out[k] = [];}\r\n\t\t\tout[k].push(z);\r\n\t\t} else {\r\n\t\t\tarr.push(k);\r\n\t\t}\r\n\t}\r\n\treturn {main: arr, keys: out};\r\n};\r\nlet utils = {\r\n\textend: function (dest) {\r\n\t\tvar i, j, len, src;\r\n\r\n\t\tfor (j = 1, len = arguments.length; j < len; j++) {\r\n\t\t\tsrc = arguments[j];\r\n\t\t\tfor (i in src) {\r\n\t\t\t\tdest[i] = src[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn dest;\r\n\t},\r\n\r\n\tmakeTileKeys: function(it, ptiles) {\r\n\t\tvar tklen = it.tilesOrder.length,\r\n\t\t\tarr = it.tiles,\r\n\t\t\ttiles = {},\r\n\t\t\tnewTiles = {};\r\n\r\n\t\twhile (arr.length) {\r\n\t\t\tvar t = arr.splice(0, tklen),\r\n\t\t\t\ttk = t.join('_'),\r\n\t\t\t\ttile = ptiles[tk];\r\n\t\t\tif (!tile || !tile.data) {\r\n\t\t\t\tif (!tile) {\r\n\t\t\t\t\ttiles[tk] = {\r\n\t\t\t\t\t\ttp: {z: t[0], x: t[1], y: t[2], v: t[3], s: t[4], d: t[5]}\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttiles[tk] = tile;\r\n\t\t\t\t}\r\n\t\t\t\tnewTiles[tk] = true;\r\n\t\t\t} else {\r\n\t\t\t\ttiles[tk] = tile;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {tiles: tiles, newTiles: newTiles};\r\n\t},\r\n\r\n\tgetDataSource: function(id, hostName) {\r\n\t\t// var maps = gmx._maps[hostName];\r\n\t\t// for (var mID in maps) {\r\n\t\t\t// var ds = maps[mID].dataSources[id];\r\n\t\t\t// if (ds) { return ds; }\r\n\t\t// }\r\n\t\treturn null;\r\n\t},\r\n\r\n\tgetZoomRange: function(info) {\r\n\t\tvar arr = info.properties.styles,\r\n\t\t\tout = [40, 0];\r\n\t\tfor (var i = 0, len = arr.length; i < len; i++) {\r\n\t\t\tvar st = arr[i];\r\n\t\t\tout[0] = Math.min(out[0], st.MinZoom);\r\n\t\t\tout[1] = Math.max(out[1], st.MaxZoom);\r\n\t\t}\r\n\t\tout[0] = out[0] === 40 ? 1 : out[0];\r\n\t\tout[1] = out[1] === 0 ? 22 : out[1];\r\n\t\treturn out;\r\n\t},\r\n\r\n\tchkProtocol: function(url) {\r\n\t\treturn url.substr(0, _protocol.length) === _protocol ? url : _protocol + url;\r\n\t},\r\n\tgetFormBody: function(par) {\r\n\t\treturn Object.keys(par).map(function(key) { return encodeURIComponent(key) + '=' + encodeURIComponent(par[key]); }).join('&');\r\n\t},\r\n\tchkResponse: function(resp, type) {\r\n\t\tif (resp.status < 200 || resp.status >= 300) {\t\t\t\t\t\t// error\r\n\t\t\treturn Promise.reject(resp);\r\n\t\t} else {\r\n\t\t\tvar contentType = resp.headers.get('Content-Type');\r\n\t\t\tif (type === 'bitmap') {\t\t\t\t\t\t\t\t\t\t\t\t// get blob\r\n\t\t\t\treturn resp.blob();\r\n\t\t\t} else if (contentType.indexOf('application/json') > -1) {\t\t\t\t// application/json; charset=utf-8\r\n\t\t\t\treturn resp.json();\r\n\t\t\t} else if (contentType.indexOf('text/javascript') > -1) {\t \t\t\t// text/javascript; charset=utf-8\r\n\t\t\t\treturn resp.text();\r\n\t\t\t// } else if (contentType.indexOf('application/json') > -1) {\t \t\t// application/json; charset=utf-8\r\n\t\t\t\t// ret = resp.text();\r\n\t\t\t// } else if (contentType.indexOf('application/json') > -1) {\t \t\t// application/json; charset=utf-8\r\n\t\t\t\t// ret = resp.formData();\r\n\t\t\t// } else if (contentType.indexOf('application/json') > -1) {\t \t\t// application/json; charset=utf-8\r\n\t\t\t\t// ret = resp.arrayBuffer();\r\n\t\t\t// } else {\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn resp.text();\r\n\t},\r\n\t// getJson: function(url, params, options) {\r\n\tgetJson: function(queue) {\r\n// log('getJson', _protocol, queue, Date.now())\r\n\t\tvar par = utils.extend({}, queue.params, syncParams),\r\n\t\t\toptions = queue.options || {},\r\n\t\t\topt = utils.extend({\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\theaders: {'Content-type': 'application/x-www-form-urlencoded'}\r\n\t\t\t\t// mode: 'cors',\r\n\t\t\t\t// redirect: 'follow',\r\n\t\t\t\t// credentials: 'include'\r\n\t\t\t}, fetchOptions, options, {\r\n\t\t\t\tbody: utils.getFormBody(par)\r\n\t\t\t});\r\n\t\treturn fetch(utils.chkProtocol(queue.url), opt)\r\n\t\t.then(function(res) {\r\n\t\t\treturn utils.chkResponse(res, options.type);\r\n\t\t})\r\n\t\t.then(function(res) {\r\n\t\t\tvar out = {url: queue.url, queue: queue, load: true, res: res};\r\n\t\t\t// if (queue.send) {\r\n\t\t\t\t// handler.workerContext.postMessage(out);\r\n\t\t\t// } else {\r\n\t\t\t\treturn out;\r\n\t\t\t// }\r\n\t\t})\r\n\t\t.catch(function(err) {\r\n\t\t\treturn {url: queue.url, queue: queue, load: false, error: err.toString()};\r\n\t\t\t// handler.workerContext.postMessage(out);\r\n\t\t});\r\n    },\r\n\r\n    getTileAttributes: function(prop) {\r\n        var tileAttributeIndexes = {},\r\n            tileAttributeTypes = {};\r\n        if (prop.attributes) {\r\n            var attrs = prop.attributes,\r\n                attrTypes = prop.attrTypes || null;\r\n            if (prop.identityField) { tileAttributeIndexes[prop.identityField] = 0; }\r\n            for (var a = 0; a < attrs.length; a++) {\r\n                var key = attrs[a];\r\n                tileAttributeIndexes[key] = a + 1;\r\n                tileAttributeTypes[key] = attrTypes ? attrTypes[a] : 'string';\r\n            }\r\n        }\r\n        return {\r\n            tileAttributeTypes: tileAttributeTypes,\r\n            tileAttributeIndexes: tileAttributeIndexes\r\n        };\r\n    }\r\n};\r\n/*\r\nconst requestSessionKey = (serverHost, apiKey) => {\r\n\tlet keys = _sessionKeys;\r\n\tif (!(serverHost in keys)) {\r\n\t\tkeys[serverHost] = new Promise(function(resolve, reject) {\r\n\t\t\tif (apiKey) {\r\n\t\t\t\tutils.getJson({\r\n\t\t\t\t\turl: '//' + serverHost + '/ApiKey.ashx',\r\n\t\t\t\t\tparams: {WrapStyle: 'None', Key: apiKey}\r\n\t\t\t\t})\r\n\t\t\t\t\t.then(function(json) {\r\n\t\t\t\t\t\tlet res = json.res;\r\n\t\t\t\t\t\tif (res.Status === 'ok' && res.Result) {\r\n\t\t\t\t\t\t\tresolve(res.Result.Key !== 'null' ? '' : res.Result.Key);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treject(json);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(function() {\r\n\t\t\t\t\t\tresolve('');\r\n\t\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tresolve('');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn keys[serverHost];\r\n};\r\n*/\r\nconst getMapTree = (params) => {\r\n\tparams = params || {};\r\n\treturn utils.getJson({\r\n\t\turl: serverBase + 'Map/GetMapFolder',\r\n\t\t// options: {},\r\n\t\tparams: {\r\n\t\t\tsrs: 3857, \r\n\t\t\tskipTiles: 'All',\r\n\r\n\t\t\tmapId: (params.mapId || 'C8612B3A77D84F3F87953BEF17026A5F'),\r\n\t\t\tfolderId: 'root',\r\n\t\t\tvisibleItemOnly: false\r\n\t\t}\r\n\t})\r\n\t\t.then(function(json) {\r\n\t\t\treturn parseTree(json.res);\r\n\t\t});\r\n};\r\n\r\nconst _iterateNodeChilds = (node, level, out) => {\r\n\tlevel = level || 0;\r\n\tout = out || {\r\n\t\tlayers: []\r\n\t};\r\n\t\r\n\tif (node) {\r\n\t\tlet type = node.type,\r\n\t\t\tcontent = node.content,\r\n\t\t\tprops = content.properties;\r\n\t\tif (type === 'layer') {\r\n\t\t\tlet ph = { level: level, properties: props };\r\n\t\t\tif (content.geometry) { ph.geometry = content.geometry; }\r\n\t\t\tout.layers.push(ph);\r\n\t\t} else if (type === 'group') {\r\n\t\t\tlet childs = content.children || [];\r\n\t\t\tout.layers.push({ level: level, group: true, childsLen: childs.length, properties: props });\r\n\t\t\tchilds.map((it) => {\r\n\t\t\t\t_iterateNodeChilds(it, level + 1, out);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t} else {\r\n\t\treturn out;\r\n\t}\r\n\treturn out;\r\n};\r\n\r\nconst parseTree = (json) => {\r\n\tlet out = {};\r\n\tif (json.Status === 'error') {\r\n\t\tout = json;\r\n\t} else if (json.Result && json.Result.content) {\r\n\t\tout = _iterateNodeChilds(json.Result);\r\n\t\tout.mapAttr = out.layers.shift();\r\n\t}\r\n// console.log('______json_out_______', out, json)\r\n\treturn out;\r\n};\r\nconst getReq = url => {\r\n\treturn fetch(url, {\r\n\t\t\tmethod: 'get',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: 'include'\r\n\t\t// headers: {'Accept': 'application/json'},\r\n\t\t// body: JSON.stringify(params)\t// TODO: сервер почему то не хочет работать так https://googlechrome.github.io/samples/fetch-api/fetch-post.html\r\n\t\t})\r\n\t\t.then(res => res.json())\r\n\t\t.catch(err => console.warn(err));\r\n};\r\n\r\nconst getLayerItems = (params) => {\r\n\tparams = params || {};\r\n\r\n\tlet url = `${serverBase}VectorLayer/Search.ashx`;\r\n\turl += '?layer=' + params.layerID;\r\n\tif (params.id) { '&query=gmx_id=' + params.id; }\r\n\r\n\turl += '&out_cs=EPSG:4326';\r\n\turl += '&geometry=true';\r\n\treturn getReq(url);\r\n};\r\nconst getReportsCount = () => {\r\n\treturn getReq(serverProxy + '?path=/rest/v1/get-current-user-info');\r\n};\r\n\r\nexport default {\r\n\tparseURLParams,\r\n\tgetMapTree,\r\n\tgetReportsCount,\r\n\tgetLayerItems\r\n};","import DataWorker from 'web-worker:./worker';\r\nimport Requests from './worker/Requests.js';\r\n\r\nconst dataWorker = new DataWorker();\nconst urlPars = Requests.parseURLParams();\n\t\tconsole.log('urlPars', urlPars);\n\r\n//dataWorker.postMessage('Hello World!');\r\nconst Utils = {\r\n\tsaveState: (data, key) => {\r\n\t\tkey = key || 'Forest_';\r\n\t\twindow.localStorage.setItem(key, JSON.stringify(data));\r\n\t},\r\n\tgetState: key => {\r\n\t\tkey = key || 'Forest_';\r\n\t\treturn JSON.parse(window.localStorage.getItem(key)) || {};\r\n\t},\r\n\r\n\tisDelynkaLayer: (it) => {\r\n\t\tlet out = false;\r\n\t\tif (it._gmx) {\r\n\t\t\tlet attr = it._gmx.tileAttributeTypes;\r\n\t\t\tout = attr.snap && attr.FRSTAT;\r\n\t\t}\r\n\t\treturn out;\r\n\t},\r\n\tisKvartalLayer: (it) => {\r\n\t\tlet out = false;\r\n\t\tif (it._gmx) {\r\n\t\t\tlet attr = it._gmx.tileAttributeTypes;\r\n\t\t\tout = attr.kv;\r\n\t\t}\r\n\t\treturn out;\r\n\t},\r\n\tgetLayerItems: (it, opt) => {\r\n\t\tdataWorker.onmessage = (res) => {\r\n\t\t\tlet data = res.data,\r\n\t\t\t\tcmd = data.cmd,\r\n\t\t\t\tjson = data.out,\r\n\t\t\t\ttype = opt && opt.type || 'delynka';\r\n\r\n\t\t\tif (cmd === 'getLayerItems') {\r\n\t\t\t\tif (type === 'delynka') {\r\n\t\t\t\t\t// delItems.set(json.Result);\r\n\t\t\t\t// } else {\r\n\t\t\t\t\t// kvItems.set(json.Result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// console.log('onmessage', res);\r\n\t\t};\r\n\t\tdataWorker.postMessage({cmd: 'getLayerItems', layerID: it.options.layerID, opt: opt});\r\n\t},\r\n\tgetReportsCount: (opt) => {\r\n\t\tdataWorker.onmessage = (res) => {\r\n\t\t\tlet data = res.data,\r\n\t\t\t\tcmd = data.cmd,\r\n\t\t\t\tjson = data.out;\r\n\r\n\t\t\tif (cmd === 'getReportsCount') {\r\n\t\t\t\t// reportsCount.set(json);\r\n\t\t\t}\r\n\t\t};\r\n\t\tdataWorker.postMessage({cmd: 'getReportsCount', opt: opt});\r\n\t},\r\n\tgetMap: (opt) => {\r\n        return new Promise((resolve, reject) => {\r\n\r\n\t\t\tdataWorker.onmessage = (res) => {\r\n\t\t\t\tlet data = res.data,\r\n\t\t\t\t\tcmd = data.cmd,\r\n\t\t\t\t\tjson = data.out;\r\n\r\n\t\t\t\tif (cmd === 'getMap') {\r\n\t\t\t\t\tresolve(json);\r\n\t\t\t\t}\r\n\t\t// console.log('onmessage', json);\r\n\t\t\t};\r\n\t\t\tdataWorker.postMessage({cmd: 'getMap', mapID: urlPars.main.length ? urlPars.main[0] : opt.mapID, search: location.search});\r\n\t\t});\r\n\t}\r\n\r\n};\r\n\nL.Map.addInitHook(function () {\n\tlet map = this;\n\tmap\n\t\t.on('layeradd', (ev) => {\n\tconsole.log('layeradd', ev);\n\t\t\tlet it = ev.layer,\n\t\t\t\t_gmx = it._gmx;\n\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tif (_gmx) {\n\t\t\t\t\tdataWorker.onmessage = (res) => {\n\t\t\t\t\t\tlet data = res.data,\n\t\t\t\t\t\t\tcmd = data.cmd,\n\t\t\t\t\t\t\tjson = data.out;\n\n\t\t\t\t\t\tif (cmd === 'addDataSource') {\n\t\t\t\t\t\t\tresolve(json);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tdataWorker.postMessage({cmd: 'addDataSource', id: _gmx.layerID, hostName: _gmx.hostName});\n\t\t\t\t} else {\n\t\t\t\t\tresolve({error: 'Not Geomixer layer'});\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\t\t.on('layerremove', (ev) => {\n\tconsole.log('layerremove', ev);\n\t\t\tlet it = ev.layer,\n\t\t\t\t_gmx = it._gmx;\n\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tif (_gmx) {\n\t\t\t\t\tdataWorker.onmessage = (res) => {\n\t\t\t\t\t\tlet data = res.data,\n\t\t\t\t\t\t\tcmd = data.cmd,\n\t\t\t\t\t\t\tjson = data.out;\n\n\t\t\t\t\t\tif (cmd === 'removeDataSource') {\n\t\t\t\t\t\t\tresolve(json);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tdataWorker.postMessage({cmd: 'removeDataSource', id: _gmx.layerID, hostName: _gmx.hostName});\n\t\t\t\t} else {\n\t\t\t\t\tresolve({error: 'Not Geomixer layer'});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n});\n\r\nexport {dataWorker, Utils};\r\n"],"names":["_self","self","window","serverBase","serverProxy","str","location","origin","_protocol","substring","indexOf","syncParams","fetchOptions","mode","redirect","credentials","parseURLParams","sp","URLSearchParams","search","out","arr","p","k","z","push","main","keys","utils","extend","dest","i","j","len","src","arguments","length","makeTileKeys","it","ptiles","tklen","tilesOrder","tiles","newTiles","t","splice","tk","join","tile","data","tp","x","y","v","s","d","getDataSource","id","hostName","getZoomRange","info","properties","styles","st","Math","min","MinZoom","max","MaxZoom","chkProtocol","url","substr","getFormBody","par","Object","map","key","encodeURIComponent","chkResponse","resp","type","status","Promise","reject","contentType","headers","get","blob","json","text","getJson","queue","params","options","opt","method","body","fetch","then","res","load","catch","err","error","toString","getTileAttributes","prop","tileAttributeIndexes","tileAttributeTypes","attributes","attrs","attrTypes","identityField","a","getMapTree","srs","skipTiles","mapId","folderId","visibleItemOnly","parseTree","_iterateNodeChilds","node","level","layers","content","props","ph","geometry","childs","children","group","childsLen","Status","Result","mapAttr","shift","getReq","console","warn","getLayerItems","layerID","getReportsCount","dataWorker","DataWorker","urlPars","Requests","log","Utils","saveState","localStorage","setItem","JSON","stringify","getState","parse","getItem","isDelynkaLayer","_gmx","attr","snap","FRSTAT","isKvartalLayer","kv","onmessage","cmd","postMessage","getMap","resolve","mapID","L","Map","addInitHook","on","ev","layer"],"mappings":";;;IAAA,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,OAAO,KAAK,WAAW,GAAG,OAAO,GAAG,CAAC,CAAC,KAAK,kBAAkB,CAAC;IACtH,MAAM,QAAQ,GAAG,SAAS,GAAG,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;AACnD,AAyBA;AACA,IAAO,SAAS,sBAAsB,CAAC,GAAG,EAAE;IAC5C,IAAI,IAAI,SAAS,EAAE;IACnB;IACA,QAAQ,MAAM,MAAM,GAAG,QAAQ,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC;IACzD,QAAQ,OAAO,SAAS,aAAa,CAAC,OAAO,EAAE;IAC/C,YAAY,OAAO,IAAI,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IAC5C,SAAS,CAAC;IACV,KAAK;IACL;IACA,IAAI,OAAO,SAAS,aAAa,CAAC,OAAO,EAAE;IAC3C,QAAQ,OAAO,IAAI,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACxC,KAAK,CAAC;IACN,CAAC;;;;;;ICvCD,IAAMA,KAAK,GAAGC,IAAI,IAAIC,MAAtB;IAAA,IACEC,UAAU,GAAGH,KAAK,CAACG,UAAN,IAAoB,wBADnC;IAAA,IAEEC,WAAW,GAAGD,UAAU,GAAG,4BAF7B;;AAIA,QAGCE,GAAG,GAAGJ,IAAI,CAACK,QAAL,CAAcC,MAAd,IAAwB,EAH/B;IAAA,IAICC,SAAS,GAAGH,GAAG,CAACI,SAAJ,CAAc,CAAd,EAAiBJ,GAAG,CAACK,OAAJ,CAAY,GAAZ,CAAjB,CAJb;IAAA,IAKCC,UAAU,GAAG,EALd;IAAA,IAMCC,YAAY,GAAG;IACd;IACA;IACAC,EAAAA,IAAI,EAAE,MAHQ;IAIdC,EAAAA,QAAQ,EAAE,QAJI;IAKdC,EAAAA,WAAW,EAAE;IALC,CANhB;;IAcA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACX,GAAD,EAAS;IAC/B,MAAIY,EAAE,GAAG,IAAIC,eAAJ,CAAoBb,GAAG,IAAIC,QAAQ,CAACa,MAApC,CAAT;IAAA,MACCC,GAAG,GAAG,EADP;IAAA,MAECC,GAAG,GAAG,EAFP;IAD+B;IAAA;IAAA;;IAAA;IAI/B,yBAAcJ,EAAd,8HAAkB;IAAA,UAATK,CAAS;IACjB,UAAIC,CAAC,GAAGD,CAAC,CAAC,CAAD,CAAT;IAAA,UAAcE,CAAC,GAAGF,CAAC,CAAC,CAAD,CAAnB;;IACA,UAAIE,CAAJ,EAAO;IACN,YAAI,CAACJ,GAAG,CAACG,CAAD,CAAR,EAAa;IAACH,UAAAA,GAAG,CAACG,CAAD,CAAH,GAAS,EAAT;IAAa;;IAC3BH,QAAAA,GAAG,CAACG,CAAD,CAAH,CAAOE,IAAP,CAAYD,CAAZ;IACA,OAHD,MAGO;IACNH,QAAAA,GAAG,CAACI,IAAJ,CAASF,CAAT;IACA;IACD;IAZ8B;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAa/B,SAAO;IAACG,IAAAA,IAAI,EAAEL,GAAP;IAAYM,IAAAA,IAAI,EAAEP;IAAlB,GAAP;IACA,CAdD;;IAeA,IAAIQ,KAAK,GAAG;IACXC,EAAAA,MAAM,EAAE,gBAAUC,IAAV,EAAgB;IACvB,QAAIC,CAAJ,EAAOC,CAAP,EAAUC,GAAV,EAAeC,GAAf;;IAEA,SAAKF,CAAC,GAAG,CAAJ,EAAOC,GAAG,GAAGE,SAAS,CAACC,MAA5B,EAAoCJ,CAAC,GAAGC,GAAxC,EAA6CD,CAAC,EAA9C,EAAkD;IACjDE,MAAAA,GAAG,GAAGC,SAAS,CAACH,CAAD,CAAf;;IACA,WAAKD,CAAL,IAAUG,GAAV,EAAe;IACdJ,QAAAA,IAAI,CAACC,CAAD,CAAJ,GAAUG,GAAG,CAACH,CAAD,CAAb;IACA;IACD;;IACD,WAAOD,IAAP;IACA,GAXU;IAaXO,EAAAA,YAAY,EAAE,sBAASC,EAAT,EAAaC,MAAb,EAAqB;IAClC,QAAIC,KAAK,GAAGF,EAAE,CAACG,UAAH,CAAcL,MAA1B;IAAA,QACCf,GAAG,GAAGiB,EAAE,CAACI,KADV;IAAA,QAECA,KAAK,GAAG,EAFT;IAAA,QAGCC,QAAQ,GAAG,EAHZ;;IAKA,WAAOtB,GAAG,CAACe,MAAX,EAAmB;IAClB,UAAIQ,CAAC,GAAGvB,GAAG,CAACwB,MAAJ,CAAW,CAAX,EAAcL,KAAd,CAAR;IAAA,UACCM,EAAE,GAAGF,CAAC,CAACG,IAAF,CAAO,GAAP,CADN;IAAA,UAECC,IAAI,GAAGT,MAAM,CAACO,EAAD,CAFd;;IAGA,UAAI,CAACE,IAAD,IAAS,CAACA,IAAI,CAACC,IAAnB,EAAyB;IACxB,YAAI,CAACD,IAAL,EAAW;IACVN,UAAAA,KAAK,CAACI,EAAD,CAAL,GAAY;IACXI,YAAAA,EAAE,EAAE;IAAC1B,cAAAA,CAAC,EAAEoB,CAAC,CAAC,CAAD,CAAL;IAAUO,cAAAA,CAAC,EAAEP,CAAC,CAAC,CAAD,CAAd;IAAmBQ,cAAAA,CAAC,EAAER,CAAC,CAAC,CAAD,CAAvB;IAA4BS,cAAAA,CAAC,EAAET,CAAC,CAAC,CAAD,CAAhC;IAAqCU,cAAAA,CAAC,EAAEV,CAAC,CAAC,CAAD,CAAzC;IAA8CW,cAAAA,CAAC,EAAEX,CAAC,CAAC,CAAD;IAAlD;IADO,WAAZ;IAGA,SAJD,MAIO;IACNF,UAAAA,KAAK,CAACI,EAAD,CAAL,GAAYE,IAAZ;IACA;;IACDL,QAAAA,QAAQ,CAACG,EAAD,CAAR,GAAe,IAAf;IACA,OATD,MASO;IACNJ,QAAAA,KAAK,CAACI,EAAD,CAAL,GAAYE,IAAZ;IACA;IACD;;IACD,WAAO;IAACN,MAAAA,KAAK,EAAEA,KAAR;IAAeC,MAAAA,QAAQ,EAAEA;IAAzB,KAAP;IACA,GArCU;IAuCXa,EAAAA,aAAa,EAAE,uBAASC,EAAT,EAAaC,QAAb,EAAuB;IACrC;IACA;IACC;IACA;IACD;IACA,WAAO,IAAP;IACA,GA9CU;IAgDXC,EAAAA,YAAY,EAAE,sBAASC,IAAT,EAAe;IAC5B,QAAIvC,GAAG,GAAGuC,IAAI,CAACC,UAAL,CAAgBC,MAA1B;IAAA,QACC1C,GAAG,GAAG,CAAC,EAAD,EAAK,CAAL,CADP;;IAEA,SAAK,IAAIW,CAAC,GAAG,CAAR,EAAWE,GAAG,GAAGZ,GAAG,CAACe,MAA1B,EAAkCL,CAAC,GAAGE,GAAtC,EAA2CF,CAAC,EAA5C,EAAgD;IAC/C,UAAIgC,EAAE,GAAG1C,GAAG,CAACU,CAAD,CAAZ;IACAX,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4C,IAAI,CAACC,GAAL,CAAS7C,GAAG,CAAC,CAAD,CAAZ,EAAiB2C,EAAE,CAACG,OAApB,CAAT;IACA9C,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS4C,IAAI,CAACG,GAAL,CAAS/C,GAAG,CAAC,CAAD,CAAZ,EAAiB2C,EAAE,CAACK,OAApB,CAAT;IACA;;IACDhD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,KAAW,EAAX,GAAgB,CAAhB,GAAoBA,GAAG,CAAC,CAAD,CAAhC;IACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,KAAW,CAAX,GAAe,EAAf,GAAoBA,GAAG,CAAC,CAAD,CAAhC;IACA,WAAOA,GAAP;IACA,GA3DU;IA6DXiD,EAAAA,WAAW,EAAE,qBAASC,GAAT,EAAc;IAC1B,WAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAc/D,SAAS,CAAC4B,MAAxB,MAAoC5B,SAApC,GAAgD8D,GAAhD,GAAsD9D,SAAS,GAAG8D,GAAzE;IACA,GA/DU;IAgEXE,EAAAA,WAAW,EAAE,qBAASC,GAAT,EAAc;IAC1B,WAAOC,MAAM,CAAC/C,IAAP,CAAY8C,GAAZ,EAAiBE,GAAjB,CAAqB,UAASC,GAAT,EAAc;IAAE,aAAOC,kBAAkB,CAACD,GAAD,CAAlB,GAA0B,GAA1B,GAAgCC,kBAAkB,CAACJ,GAAG,CAACG,GAAD,CAAJ,CAAzD;IAAsE,KAA3G,EAA6G7B,IAA7G,CAAkH,GAAlH,CAAP;IACA,GAlEU;IAmEX+B,EAAAA,WAAW,EAAE,qBAASC,IAAT,EAAeC,IAAf,EAAqB;IACjC,QAAID,IAAI,CAACE,MAAL,GAAc,GAAd,IAAqBF,IAAI,CAACE,MAAL,IAAe,GAAxC,EAA6C;IAAO;IACnD,aAAOC,OAAO,CAACC,MAAR,CAAeJ,IAAf,CAAP;IACA,KAFD,MAEO;IACN,UAAIK,WAAW,GAAGL,IAAI,CAACM,OAAL,CAAaC,GAAb,CAAiB,cAAjB,CAAlB;;IACA,UAAIN,IAAI,KAAK,QAAb,EAAuB;IAAa;IACnC,eAAOD,IAAI,CAACQ,IAAL,EAAP;IACA,OAFD,MAEO,IAAIH,WAAW,CAAC1E,OAAZ,CAAoB,kBAApB,IAA0C,CAAC,CAA/C,EAAkD;IAAK;IAC7D,eAAOqE,IAAI,CAACS,IAAL,EAAP;IACA,OAFM,MAEA,IAAIJ,WAAW,CAAC1E,OAAZ,CAAoB,iBAApB,IAAyC,CAAC,CAA9C,EAAiD;IAAM;IAC7D,eAAOqE,IAAI,CAACU,IAAL,EAAP,CADuD;IAGvD;IACD;IACC;IACD;IACC;IACD;IACC;IACD;;IACD,WAAOV,IAAI,CAACU,IAAL,EAAP;IACA,GAxFU;IAyFX;IACAC,EAAAA,OAAO,EAAE,iBAASC,KAAT,EAAgB;IAC1B;IACE,QAAIlB,GAAG,GAAG7C,KAAK,CAACC,MAAN,CAAa,EAAb,EAAiB8D,KAAK,CAACC,MAAvB,EAA+BjF,UAA/B,CAAV;IAAA,QACCkF,OAAO,GAAGF,KAAK,CAACE,OAAN,IAAiB,EAD5B;IAAA,QAECC,GAAG,GAAGlE,KAAK,CAACC,MAAN,CAAa;IAClBkE,MAAAA,MAAM,EAAE,MADU;IAElBV,MAAAA,OAAO,EAAE;IAAC,wBAAgB;IAAjB,OAFS;IAIlB;IACA;;IALkB,KAAb,EAMHzE,YANG,EAMWiF,OANX,EAMoB;IACzBG,MAAAA,IAAI,EAAEpE,KAAK,CAAC4C,WAAN,CAAkBC,GAAlB;IADmB,KANpB,CAFP;IAWA,WAAOwB,KAAK,CAACrE,KAAK,CAACyC,WAAN,CAAkBsB,KAAK,CAACrB,GAAxB,CAAD,EAA+BwB,GAA/B,CAAL,CACNI,IADM,CACD,UAASC,GAAT,EAAc;IACnB,aAAOvE,KAAK,CAACkD,WAAN,CAAkBqB,GAAlB,EAAuBN,OAAO,CAACb,IAA/B,CAAP;IACA,KAHM,EAINkB,IAJM,CAID,UAASC,GAAT,EAAc;IACnB,UAAI/E,GAAG,GAAG;IAACkD,QAAAA,GAAG,EAAEqB,KAAK,CAACrB,GAAZ;IAAiBqB,QAAAA,KAAK,EAAEA,KAAxB;IAA+BS,QAAAA,IAAI,EAAE,IAArC;IAA2CD,QAAAA,GAAG,EAAEA;IAAhD,OAAV,CADmB;IAGlB;IACD;;IACC,aAAO/E,GAAP,CALkB;IAOnB,KAXM,EAYNiF,KAZM,CAYA,UAASC,GAAT,EAAc;IACpB,aAAO;IAAChC,QAAAA,GAAG,EAAEqB,KAAK,CAACrB,GAAZ;IAAiBqB,QAAAA,KAAK,EAAEA,KAAxB;IAA+BS,QAAAA,IAAI,EAAE,KAArC;IAA4CG,QAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ;IAAnD,OAAP,CADoB;IAGpB,KAfM,CAAP;IAgBG,GAvHO;IAyHRC,EAAAA,iBAAiB,EAAE,2BAASC,IAAT,EAAe;IAC9B,QAAIC,oBAAoB,GAAG,EAA3B;IAAA,QACIC,kBAAkB,GAAG,EADzB;;IAEA,QAAIF,IAAI,CAACG,UAAT,EAAqB;IACjB,UAAIC,KAAK,GAAGJ,IAAI,CAACG,UAAjB;IAAA,UACIE,SAAS,GAAGL,IAAI,CAACK,SAAL,IAAkB,IADlC;;IAEA,UAAIL,IAAI,CAACM,aAAT,EAAwB;IAAEL,QAAAA,oBAAoB,CAACD,IAAI,CAACM,aAAN,CAApB,GAA2C,CAA3C;IAA+C;;IACzE,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAAC1E,MAA1B,EAAkC6E,CAAC,EAAnC,EAAuC;IACnC,YAAIrC,GAAG,GAAGkC,KAAK,CAACG,CAAD,CAAf;IACAN,QAAAA,oBAAoB,CAAC/B,GAAD,CAApB,GAA4BqC,CAAC,GAAG,CAAhC;IACAL,QAAAA,kBAAkB,CAAChC,GAAD,CAAlB,GAA0BmC,SAAS,GAAGA,SAAS,CAACE,CAAD,CAAZ,GAAkB,QAArD;IACH;IACJ;;IACD,WAAO;IACHL,MAAAA,kBAAkB,EAAEA,kBADjB;IAEHD,MAAAA,oBAAoB,EAAEA;IAFnB,KAAP;IAIH;IA1IO,CAAZ;IA4IA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6BA,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAACtB,MAAD,EAAY;IAC9BA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;IACA,SAAOhE,KAAK,CAAC8D,OAAN,CAAc;IACpBpB,IAAAA,GAAG,EAAEnE,UAAU,GAAG,kBADE;IAEpB;IACAyF,IAAAA,MAAM,EAAE;IACPuB,MAAAA,GAAG,EAAE,IADE;IAEPC,MAAAA,SAAS,EAAE,KAFJ;IAIPC,MAAAA,KAAK,EAAGzB,MAAM,CAACyB,KAAP,IAAgB,kCAJjB;IAKPC,MAAAA,QAAQ,EAAE,MALH;IAMPC,MAAAA,eAAe,EAAE;IANV;IAHY,GAAd,EAYLrB,IAZK,CAYA,UAASV,IAAT,EAAe;IACpB,WAAOgC,SAAS,CAAChC,IAAI,CAACW,GAAN,CAAhB;IACA,GAdK,CAAP;IAeA,CAjBD;;IAmBA,IAAMsB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAOC,KAAP,EAAcvG,GAAd,EAAsB;IAChDuG,EAAAA,KAAK,GAAGA,KAAK,IAAI,CAAjB;IACAvG,EAAAA,GAAG,GAAGA,GAAG,IAAI;IACZwG,IAAAA,MAAM,EAAE;IADI,GAAb;;IAIA,MAAIF,IAAJ,EAAU;IACT,QAAI1C,IAAI,GAAG0C,IAAI,CAAC1C,IAAhB;IAAA,QACC6C,OAAO,GAAGH,IAAI,CAACG,OADhB;IAAA,QAECC,KAAK,GAAGD,OAAO,CAAChE,UAFjB;;IAGA,QAAImB,IAAI,KAAK,OAAb,EAAsB;IACrB,UAAI+C,EAAE,GAAG;IAAEJ,QAAAA,KAAK,EAAEA,KAAT;IAAgB9D,QAAAA,UAAU,EAAEiE;IAA5B,OAAT;;IACA,UAAID,OAAO,CAACG,QAAZ,EAAsB;IAAED,QAAAA,EAAE,CAACC,QAAH,GAAcH,OAAO,CAACG,QAAtB;IAAiC;;IACzD5G,MAAAA,GAAG,CAACwG,MAAJ,CAAWnG,IAAX,CAAgBsG,EAAhB;IACA,KAJD,MAIO,IAAI/C,IAAI,KAAK,OAAb,EAAsB;IAC5B,UAAIiD,MAAM,GAAGJ,OAAO,CAACK,QAAR,IAAoB,EAAjC;IACA9G,MAAAA,GAAG,CAACwG,MAAJ,CAAWnG,IAAX,CAAgB;IAAEkG,QAAAA,KAAK,EAAEA,KAAT;IAAgBQ,QAAAA,KAAK,EAAE,IAAvB;IAA6BC,QAAAA,SAAS,EAAEH,MAAM,CAAC7F,MAA/C;IAAuDyB,QAAAA,UAAU,EAAEiE;IAAnE,OAAhB;IACAG,MAAAA,MAAM,CAACtD,GAAP,CAAW,UAACrC,EAAD,EAAQ;IAClBmF,QAAAA,kBAAkB,CAACnF,EAAD,EAAKqF,KAAK,GAAG,CAAb,EAAgBvG,GAAhB,CAAlB;IACA,OAFD;IAGA;IAED,GAhBD,MAgBO;IACN,WAAOA,GAAP;IACA;;IACD,SAAOA,GAAP;IACA,CA1BD;;IA4BA,IAAMoG,SAAS,GAAG,SAAZA,SAAY,CAAChC,IAAD,EAAU;IAC3B,MAAIpE,GAAG,GAAG,EAAV;;IACA,MAAIoE,IAAI,CAAC6C,MAAL,KAAgB,OAApB,EAA6B;IAC5BjH,IAAAA,GAAG,GAAGoE,IAAN;IACA,GAFD,MAEO,IAAIA,IAAI,CAAC8C,MAAL,IAAe9C,IAAI,CAAC8C,MAAL,CAAYT,OAA/B,EAAwC;IAC9CzG,IAAAA,GAAG,GAAGqG,kBAAkB,CAACjC,IAAI,CAAC8C,MAAN,CAAxB;IACAlH,IAAAA,GAAG,CAACmH,OAAJ,GAAcnH,GAAG,CAACwG,MAAJ,CAAWY,KAAX,EAAd;IACA,GAP0B;;;IAS3B,SAAOpH,GAAP;IACA,CAVD;;IAWA,IAAMqH,MAAM,GAAG,SAATA,MAAS,CAAAnE,GAAG,EAAI;IACrB,SAAO2B,KAAK,CAAC3B,GAAD,EAAM;IAChByB,IAAAA,MAAM,EAAE,KADQ;IAEhBlF,IAAAA,IAAI,EAAE,MAFU;IAGhBE,IAAAA,WAAW,EAAE,SAHG;IAKjB;;IALiB,GAAN,CAAL,CAOLmF,IAPK,CAOA,UAAAC,GAAG;IAAA,WAAIA,GAAG,CAACX,IAAJ,EAAJ;IAAA,GAPH,EAQLa,KARK,CAQC,UAAAC,GAAG;IAAA,WAAIoC,OAAO,CAACC,IAAR,CAAarC,GAAb,CAAJ;IAAA,GARJ,CAAP;IASA,CAVD;;IAYA,IAAMsC,aAAa,GAAG,SAAhBA,aAAgB,CAAChD,MAAD,EAAY;IACjCA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;IAEA,MAAItB,GAAG,aAAMnE,UAAN,4BAAP;IACAmE,EAAAA,GAAG,IAAI,YAAYsB,MAAM,CAACiD,OAA1B;;IACA,MAAIjD,MAAM,CAACnC,EAAX,EAAe;IAAE,uBAAmBmC,MAAM,CAACnC,EAA1B;IAA+B;;IAEhDa,EAAAA,GAAG,IAAI,mBAAP;IACAA,EAAAA,GAAG,IAAI,gBAAP;IACA,SAAOmE,MAAM,CAACnE,GAAD,CAAb;IACA,CAVD;;IAWA,IAAMwE,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAC7B,SAAOL,MAAM,CAACrI,WAAW,GAAG,sCAAf,CAAb;IACA,CAFD;;AAIA,mBAAe;IACdY,EAAAA,cAAc,EAAdA,cADc;IAEdkG,EAAAA,UAAU,EAAVA,UAFc;IAGd4B,EAAAA,eAAe,EAAfA,eAHc;IAIdF,EAAAA,aAAa,EAAbA;IAJc,CAAf;;QC7RMG,UAAU,GAAG,IAAIC,aAAJ,EAAnB;IACA,IAAMC,OAAO,GAAGC,QAAQ,CAAClI,cAAT,EAAhB;IACE0H,OAAO,CAACS,GAAR,CAAY,SAAZ,EAAuBF,OAAvB;;AAGF,QAAMG,KAAK,GAAG;IACbC,EAAAA,SAAS,EAAE,mBAACpG,IAAD,EAAO2B,GAAP,EAAe;IACzBA,IAAAA,GAAG,GAAGA,GAAG,IAAI,SAAb;IACA1E,IAAAA,MAAM,CAACoJ,YAAP,CAAoBC,OAApB,CAA4B3E,GAA5B,EAAiC4E,IAAI,CAACC,SAAL,CAAexG,IAAf,CAAjC;IACA,GAJY;IAKbyG,EAAAA,QAAQ,EAAE,kBAAA9E,GAAG,EAAI;IAChBA,IAAAA,GAAG,GAAGA,GAAG,IAAI,SAAb;IACA,WAAO4E,IAAI,CAACG,KAAL,CAAWzJ,MAAM,CAACoJ,YAAP,CAAoBM,OAApB,CAA4BhF,GAA5B,CAAX,KAAgD,EAAvD;IACA,GARY;IAUbiF,EAAAA,cAAc,EAAE,wBAACvH,EAAD,EAAQ;IACvB,QAAIlB,GAAG,GAAG,KAAV;;IACA,QAAIkB,EAAE,CAACwH,IAAP,EAAa;IACZ,UAAIC,IAAI,GAAGzH,EAAE,CAACwH,IAAH,CAAQlD,kBAAnB;IACAxF,MAAAA,GAAG,GAAG2I,IAAI,CAACC,IAAL,IAAaD,IAAI,CAACE,MAAxB;IACA;;IACD,WAAO7I,GAAP;IACA,GAjBY;IAkBb8I,EAAAA,cAAc,EAAE,wBAAC5H,EAAD,EAAQ;IACvB,QAAIlB,GAAG,GAAG,KAAV;;IACA,QAAIkB,EAAE,CAACwH,IAAP,EAAa;IACZ,UAAIC,IAAI,GAAGzH,EAAE,CAACwH,IAAH,CAAQlD,kBAAnB;IACAxF,MAAAA,GAAG,GAAG2I,IAAI,CAACI,EAAX;IACA;;IACD,WAAO/I,GAAP;IACA,GAzBY;IA0BbwH,EAAAA,aAAa,EAAE,uBAACtG,EAAD,EAAKwD,GAAL,EAAa;IAC3BiD,IAAAA,UAAU,CAACqB,SAAX,GAAuB,UAACjE,GAAD,EAAS;IAC/B,UAAIlD,IAAI,GAAGkD,GAAG,CAAClD,IAAf;IAAA,UACCoH,GAAG,GAAGpH,IAAI,CAACoH,GADZ;IAAA,UAEC7E,IAAI,GAAGvC,IAAI,CAAC7B,GAFb;IAAA,UAGC4D,IAAI,GAAGc,GAAG,IAAIA,GAAG,CAACd,IAAX,IAAmB,SAH3B;;IAaA,KAdD;;IAeA+D,IAAAA,UAAU,CAACuB,WAAX,CAAuB;IAACD,MAAAA,GAAG,EAAE,eAAN;IAAuBxB,MAAAA,OAAO,EAAEvG,EAAE,CAACuD,OAAH,CAAWgD,OAA3C;IAAoD/C,MAAAA,GAAG,EAAEA;IAAzD,KAAvB;IACA,GA3CY;IA4CbgD,EAAAA,eAAe,EAAE,yBAAChD,GAAD,EAAS;IACzBiD,IAAAA,UAAU,CAACqB,SAAX,GAAuB,UAACjE,GAAD,EAAS;IAC/B,UAAIlD,IAAI,GAAGkD,GAAG,CAAClD,IAAf;IAAA,UACCoH,GAAG,GAAGpH,IAAI,CAACoH,GADZ;IAAA,UAEC7E,IAAI,GAAGvC,IAAI,CAAC7B,GAFb;IAOA,KARD;;IASA2H,IAAAA,UAAU,CAACuB,WAAX,CAAuB;IAACD,MAAAA,GAAG,EAAE,iBAAN;IAAyBvE,MAAAA,GAAG,EAAEA;IAA9B,KAAvB;IACA,GAvDY;IAwDbyE,EAAAA,MAAM,EAAE,gBAACzE,GAAD,EAAS;IACV,WAAO,IAAIZ,OAAJ,CAAY,UAACsF,OAAD,EAAUrF,MAAV,EAAqB;IAE7C4D,MAAAA,UAAU,CAACqB,SAAX,GAAuB,UAACjE,GAAD,EAAS;IAC/B,YAAIlD,IAAI,GAAGkD,GAAG,CAAClD,IAAf;IAAA,YACCoH,GAAG,GAAGpH,IAAI,CAACoH,GADZ;IAAA,YAEC7E,IAAI,GAAGvC,IAAI,CAAC7B,GAFb;;IAIA,YAAIiJ,GAAG,KAAK,QAAZ,EAAsB;IACrBG,UAAAA,OAAO,CAAChF,IAAD,CAAP;IACA,SAP8B;;IAS/B,OATD;;IAUAuD,MAAAA,UAAU,CAACuB,WAAX,CAAuB;IAACD,QAAAA,GAAG,EAAE,QAAN;IAAgBI,QAAAA,KAAK,EAAExB,OAAO,CAACvH,IAAR,CAAaU,MAAb,GAAsB6G,OAAO,CAACvH,IAAR,CAAa,CAAb,CAAtB,GAAwCoE,GAAG,CAAC2E,KAAnE;IAA0EtJ,QAAAA,MAAM,EAAEb,QAAQ,CAACa;IAA3F,OAAvB;IACA,KAbY,CAAP;IAcN;IAvEY,CAAd;IA2EAuJ,CAAC,CAACC,GAAF,CAAMC,WAAN,CAAkB,YAAY;IAC7B,MAAIjG,GAAG,GAAG,IAAV;IACAA,EAAAA,GAAG,CACDkG,EADF,CACK,UADL,EACiB,UAACC,EAAD,EAAQ;IACzBpC,IAAAA,OAAO,CAACS,GAAR,CAAY,UAAZ,EAAwB2B,EAAxB;IACE,QAAIxI,EAAE,GAAGwI,EAAE,CAACC,KAAZ;IAAA,QACCjB,IAAI,GAAGxH,EAAE,CAACwH,IADX;IAGA,WAAO,IAAI5E,OAAJ,CAAY,UAACsF,OAAD,EAAa;IAC/B,UAAIV,IAAJ,EAAU;IACTf,QAAAA,UAAU,CAACqB,SAAX,GAAuB,UAACjE,GAAD,EAAS;IAC/B,cAAIlD,IAAI,GAAGkD,GAAG,CAAClD,IAAf;IAAA,cACCoH,GAAG,GAAGpH,IAAI,CAACoH,GADZ;IAAA,cAEC7E,IAAI,GAAGvC,IAAI,CAAC7B,GAFb;;IAIA,cAAIiJ,GAAG,KAAK,eAAZ,EAA6B;IAC5BG,YAAAA,OAAO,CAAChF,IAAD,CAAP;IACA;IACD,SARD;;IASAuD,QAAAA,UAAU,CAACuB,WAAX,CAAuB;IAACD,UAAAA,GAAG,EAAE,eAAN;IAAuB5G,UAAAA,EAAE,EAAEqG,IAAI,CAACjB,OAAhC;IAAyCnF,UAAAA,QAAQ,EAAEoG,IAAI,CAACpG;IAAxD,SAAvB;IACA,OAXD,MAWO;IACN8G,QAAAA,OAAO,CAAC;IAACjE,UAAAA,KAAK,EAAE;IAAR,SAAD,CAAP;IACA;IACD,KAfM,CAAP;IAgBA,GAtBF,EAuBEsE,EAvBF,CAuBK,aAvBL,EAuBoB,UAACC,EAAD,EAAQ;IAC5BpC,IAAAA,OAAO,CAACS,GAAR,CAAY,aAAZ,EAA2B2B,EAA3B;IACE,QAAIxI,EAAE,GAAGwI,EAAE,CAACC,KAAZ;IAAA,QACCjB,IAAI,GAAGxH,EAAE,CAACwH,IADX;IAGA,WAAO,IAAI5E,OAAJ,CAAY,UAACsF,OAAD,EAAa;IAC/B,UAAIV,IAAJ,EAAU;IACTf,QAAAA,UAAU,CAACqB,SAAX,GAAuB,UAACjE,GAAD,EAAS;IAC/B,cAAIlD,IAAI,GAAGkD,GAAG,CAAClD,IAAf;IAAA,cACCoH,GAAG,GAAGpH,IAAI,CAACoH,GADZ;IAAA,cAEC7E,IAAI,GAAGvC,IAAI,CAAC7B,GAFb;;IAIA,cAAIiJ,GAAG,KAAK,kBAAZ,EAAgC;IAC/BG,YAAAA,OAAO,CAAChF,IAAD,CAAP;IACA;IACD,SARD;;IASAuD,QAAAA,UAAU,CAACuB,WAAX,CAAuB;IAACD,UAAAA,GAAG,EAAE,kBAAN;IAA0B5G,UAAAA,EAAE,EAAEqG,IAAI,CAACjB,OAAnC;IAA4CnF,UAAAA,QAAQ,EAAEoG,IAAI,CAACpG;IAA3D,SAAvB;IACA,OAXD,MAWO;IACN8G,QAAAA,OAAO,CAAC;IAACjE,UAAAA,KAAK,EAAE;IAAR,SAAD,CAAP;IACA;IACD,KAfM,CAAP;IAgBA,GA5CF;IA6CA,CA/CD;;;;;;;;;;;"}
{"version":3,"file":"index.js","sources":["../scripts/WorkerLoaderHelper.js","../src/worker/Requests.js","../src/index.js"],"sourcesContent":["const kIsNodeJS = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'; // eslint-disable-line\nconst kRequire = kIsNodeJS ? module.require : null; // eslint-disable-line\n\nexport function createInlineWorkerFactory(fn, sourcemap = null) {\n    const source = fn.toString();\n    const start = source.indexOf('\\n', 10) + 1;\n    const end = source.indexOf('}', source.length - 1);\n    const body = source.substring(start, end) + (sourcemap ? `//# sourceMappingURL=${sourcemap}` : '');\n    const blankPrefixLength = body.search(/\\S/);\n    const lines = body.split('\\n').map(line => line.substring(blankPrefixLength) + '\\n');\n\n    if (kIsNodeJS) {\n        /* node.js */\n        const Worker = kRequire('worker_threads').Worker; // eslint-disable-line\n        const concat = lines.join('\\n');\n        return function WorkerFactory(options) {\n            return new Worker(concat, Object.assign({}, options, { eval: true }));\n        };\n    }\n\n    /* browser */\n    const blob = new Blob(lines, { type: 'application/javascript' });\n    const url = URL.createObjectURL(blob);\n    return function WorkerFactory(options) {\n        return new Worker(url, options);\n    };\n}\n\nexport function createURLWorkerFactory(url) {\n    if (kIsNodeJS) {\n        /* node.js */\n        const Worker = kRequire('worker_threads').Worker; // eslint-disable-line\n        return function WorkerFactory(options) {\n            return new Worker(url, options);\n        };\n    }\n    /* browser */\n    return function WorkerFactory(options) {\n        return new Worker(url, options);\n    };\n}\n\nexport function createBase64WorkerFactory(base64, sourcemap = null) {\n    const source = kIsNodeJS ? Buffer.from(base64, 'base64').toString('ascii') : atob(base64); // eslint-disable-line\n    const start = source.indexOf('\\n', 10) + 1;\n    const body = source.substring(start) + (sourcemap ? `//# sourceMappingURL=${sourcemap}` : '');\n\n    if (kIsNodeJS) {\n        /* node.js */\n        const Worker = kRequire('worker_threads').Worker; // eslint-disable-line\n        return function WorkerFactory(options) {\n            return new Worker(body, Object.assign({}, options, { eval: true }));\n        };\n    }\n\n    /* browser */\n    const blob = new Blob([body], { type: 'application/javascript' });\n    const url = URL.createObjectURL(blob);\n    return function WorkerFactory(options) {\n        return new Worker(url, options);\n    };\n}\n","\r\nconst\t_self = self || window;\r\n\t\t// serverBase = _self.serverBase || 'maps.kosmosnimki.ru/',\r\n\t\t// serverProxy = serverBase + 'Plugins/ForestReport/proxy',\r\n\t\t// gmxProxy = '//maps.kosmosnimki.ru/ApiSave.ashx';\r\n\r\n// let _app = {},\r\n\t// loaderStatus = {},\r\n\t// _sessionKeys = {},\r\nlet str = _self.location.origin || '',\r\n\t_protocol = str.substring(0, str.indexOf('/')),\r\n\tsyncParams = {},\r\n\tfetchOptions = {\r\n\t\t// method: 'post',\r\n\t\t// headers: {'Content-type': 'application/x-www-form-urlencoded'},\r\n\t\tmode: 'cors',\r\n\t\t// redirect: 'follow',\r\n\t\tcredentials: 'include'\r\n\t};\r\n\r\nconst COMPARS = {WrapStyle: 'None', ftc: 'osm', srs: 3857};\r\n\r\nconst setSyncParams = (hash) => {\t// установка дополнительных параметров для серверных запросов\r\n\tsyncParams = hash;\r\n};\r\nconst getSyncParams = (stringFlag) => {\r\n\tvar res = syncParams;\r\n\tif (stringFlag) {\r\n\t\tvar arr = [];\r\n\t\tfor (var key in res) {\r\n\t\t\tarr.push(key + '=' + res[key]);\r\n\t\t}\r\n\t\tres = arr.join('&');\r\n\t}\r\n\treturn res;\r\n};\r\n\r\nconst parseURLParams = (str) => {\r\n\tlet sp = new URLSearchParams(str || location.search),\r\n\t\tout = {},\r\n\t\tarr = [];\r\n\tfor (let p of sp) {\r\n\t\tlet k = p[0], z = p[1];\r\n\t\tif (z) {\r\n\t\t\tif (!out[k]) {out[k] = [];}\r\n\t\t\tout[k].push(z);\r\n\t\t} else {\r\n\t\t\tarr.push(k);\r\n\t\t}\r\n\t}\r\n\treturn {main: arr, keys: out};\r\n};\r\nlet utils = {\r\n\textend: function (dest) {\r\n\t\tvar i, j, len, src;\r\n\r\n\t\tfor (j = 1, len = arguments.length; j < len; j++) {\r\n\t\t\tsrc = arguments[j];\r\n\t\t\tfor (i in src) {\r\n\t\t\t\tdest[i] = src[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn dest;\r\n\t},\r\n\r\n\tmakeTileKeys: function(it, ptiles) {\r\n\t\tvar tklen = it.tilesOrder.length,\r\n\t\t\tarr = it.tiles,\r\n\t\t\ttiles = {},\r\n\t\t\tnewTiles = {};\r\n\r\n\t\twhile (arr.length) {\r\n\t\t\tvar t = arr.splice(0, tklen),\r\n\t\t\t\ttk = t.join('_'),\r\n\t\t\t\ttile = ptiles[tk];\r\n\t\t\tif (!tile || !tile.data) {\r\n\t\t\t\tif (!tile) {\r\n\t\t\t\t\ttiles[tk] = {\r\n\t\t\t\t\t\ttp: {z: t[0], x: t[1], y: t[2], v: t[3], s: t[4], d: t[5]}\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttiles[tk] = tile;\r\n\t\t\t\t}\r\n\t\t\t\tnewTiles[tk] = true;\r\n\t\t\t} else {\r\n\t\t\t\ttiles[tk] = tile;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {tiles: tiles, newTiles: newTiles};\r\n\t},\r\n\r\n\tgetZoomRange: function(info) {\r\n\t\tvar arr = info.properties.styles,\r\n\t\t\tout = [40, 0];\r\n\t\tfor (var i = 0, len = arr.length; i < len; i++) {\r\n\t\t\tvar st = arr[i];\r\n\t\t\tout[0] = Math.min(out[0], st.MinZoom);\r\n\t\t\tout[1] = Math.max(out[1], st.MaxZoom);\r\n\t\t}\r\n\t\tout[0] = out[0] === 40 ? 1 : out[0];\r\n\t\tout[1] = out[1] === 0 ? 22 : out[1];\r\n\t\treturn out;\r\n\t},\r\n\r\n\tchkProtocol: function(url) {\r\n\t\treturn url.substr(0, _protocol.length) === _protocol ? url : _protocol + url;\r\n\t},\r\n\tgetFormBody: function(par) {\r\n\t\treturn Object.keys(par).map(function(key) { return encodeURIComponent(key) + '=' + encodeURIComponent(par[key]); }).join('&');\r\n\t},\r\n\tchkResponse: function(resp, type) {\r\n\t\tif (resp.status < 200 || resp.status >= 300) {\t\t\t\t\t\t// error\r\n\t\t\treturn Promise.reject(resp);\r\n\t\t} else {\r\n\t\t\tvar contentType = resp.headers.get('Content-Type');\r\n\t\t\tif (type === 'bitmap') {\t\t\t\t\t\t\t\t\t\t\t\t// get blob\r\n\t\t\t\treturn resp.blob();\r\n\t\t\t} else if (contentType.indexOf('application/json') > -1) {\t\t\t\t// application/json; charset=utf-8\r\n\t\t\t\treturn resp.json();\r\n\t\t\t} else if (contentType.indexOf('text/javascript') > -1) {\t \t\t\t// text/javascript; charset=utf-8\r\n\t\t\t\treturn resp.text();\r\n\t\t\t// } else if (contentType.indexOf('application/json') > -1) {\t \t\t// application/json; charset=utf-8\r\n\t\t\t\t// ret = resp.text();\r\n\t\t\t// } else if (contentType.indexOf('application/json') > -1) {\t \t\t// application/json; charset=utf-8\r\n\t\t\t\t// ret = resp.formData();\r\n\t\t\t// } else if (contentType.indexOf('application/json') > -1) {\t \t\t// application/json; charset=utf-8\r\n\t\t\t\t// ret = resp.arrayBuffer();\r\n\t\t\t// } else {\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn resp.text();\r\n\t},\r\n\tgetBitMap: function(url) {\r\n\t\tlet options = {type: 'bitmap'};\r\n\t\treturn fetch(url, options)\r\n\t\t.then(function(res) {\r\n\t\t\treturn utils.chkResponse(res, options.type);\r\n\t\t// })\r\n\t\t// .then(function(blob) {\r\n\t\t\t// return createImageBitmap(blob, {\r\n\t\t\t\t// premultiplyAlpha: 'none',\r\n\t\t\t\t// colorSpaceConversion: 'none'\r\n\t\t\t// });\r\n\t\t});\r\n\t},\r\n\tgetTileJson: function(queue) {\r\n\t\tlet params = queue.params || {};\r\n\t\tif (queue.paramsArr) {\r\n\t\t\tqueue.paramsArr.forEach((it) => {\r\n\t\t\t\tparams = utils.extend(params, it);\r\n\t\t\t});\r\n\t\t}\r\n\t\tlet par = utils.extend({}, fetchOptions, COMPARS, params, syncParams),\r\n\t\t\toptions = queue.options || {};\r\n\t\treturn fetch(queue.url + '?' + utils.getFormBody(par))\r\n\t\t.then(function(res) {\r\n\t\t\treturn utils.chkResponse(res, options.type);\r\n\t\t});\r\n\t},\r\n\tgetJson: function(queue) {\r\n\t\tlet params = queue.params || {};\r\n\t\tif (queue.paramsArr) {\r\n\t\t\tqueue.paramsArr.forEach((it) => {\r\n\t\t\t\tparams = utils.extend(params, it);\r\n\t\t\t});\r\n\t\t}\r\n\t\tlet par = utils.extend({}, params, syncParams),\r\n\t\t\toptions = queue.options || {},\r\n\t\t\topt = utils.extend({\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\theaders: {'Content-type': 'application/x-www-form-urlencoded'}\r\n\t\t\t}, fetchOptions, options, {\r\n\t\t\t\tbody: utils.getFormBody(par)\r\n\t\t\t});\r\n\t\treturn fetch(utils.chkProtocol(queue.url), opt)\r\n\t\t.then(function(res) {\r\n\t\t\treturn utils.chkResponse(res, options.type);\r\n\t\t})\r\n\t\t.then(function(res) {\r\n\t\t\treturn {url: queue.url, queue: queue, load: true, res: res};\r\n\t\t})\r\n\t\t.catch(function(err) {\r\n\t\t\treturn {url: queue.url, queue: queue, load: false, error: err.toString()};\r\n\t\t\t// handler.workerContext.postMessage(out);\r\n\t\t});\r\n    },\r\n};\r\n/*\r\nconst requestSessionKey = (serverHost, apiKey) => {\r\n\tlet keys = _sessionKeys;\r\n\tif (!(serverHost in keys)) {\r\n\t\tkeys[serverHost] = new Promise(function(resolve, reject) {\r\n\t\t\tif (apiKey) {\r\n\t\t\t\tutils.getJson({\r\n\t\t\t\t\turl: '//' + serverHost + '/ApiKey.ashx',\r\n\t\t\t\t\tparams: {WrapStyle: 'None', Key: apiKey}\r\n\t\t\t\t})\r\n\t\t\t\t\t.then(function(json) {\r\n\t\t\t\t\t\tlet res = json.res;\r\n\t\t\t\t\t\tif (res.Status === 'ok' && res.Result) {\r\n\t\t\t\t\t\t\tresolve(res.Result.Key !== 'null' ? '' : res.Result.Key);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treject(json);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(function() {\r\n\t\t\t\t\t\tresolve('');\r\n\t\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tresolve('');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn keys[serverHost];\r\n};\r\nlet _maps = {};\r\nconst getMapTree = (pars) => {\r\n\tpars = pars || {};\r\n\tlet hostName = pars.hostName || serverBase,\r\n\t\tid = pars.mapId;\r\n\treturn utils.getJson({\r\n\t\turl: '//' + hostName + '/Map/GetMapFolder',\r\n\t\t// options: {},\r\n\t\tparams: {\r\n\t\t\tsrs: 3857, \r\n\t\t\tskipTiles: 'All',\r\n\r\n\t\t\tmapId: id,\r\n\t\t\tfolderId: 'root',\r\n\t\t\tvisibleItemOnly: false\r\n\t\t}\r\n\t})\r\n\t\t.then(function(json) {\r\n\t\t\tlet out = parseTree(json.res);\r\n\t\t\t_maps[hostName] = _maps[hostName] || {};\r\n\t\t\t_maps[hostName][id] = out;\r\n\t\t\treturn parseTree(out);\r\n\t\t});\r\n};\r\nconst getReq = url => {\r\n\treturn fetch(url, {\r\n\t\t\tmethod: 'get',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: 'include'\r\n\t\t// headers: {'Accept': 'application/json'},\r\n\t\t// body: JSON.stringify(params)\t// TODO: сервер почему то не хочет работать так https://googlechrome.github.io/samples/fetch-api/fetch-post.html\r\n\t\t})\r\n\t\t.then(res => res.json())\r\n\t\t.catch(err => console.warn(err));\r\n};\r\n\r\n// const getLayerItems = (params) => {\r\n\t// params = params || {};\r\n\r\n\t// let url = `${serverBase}VectorLayer/Search.ashx`;\r\n\t// url += '?layer=' + params.layerID;\r\n\t// if (params.id) { '&query=gmx_id=' + params.id; }\r\n\r\n\t// url += '&out_cs=EPSG:4326';\r\n\t// url += '&geometry=true';\r\n\t// return getReq(url);\r\n// };\r\n// const getReportsCount = () => {\r\n\t// return getReq(serverProxy + '?path=/rest/v1/get-current-user-info');\r\n// };\r\n\r\nlet dataSources = {},\r\n\tloaderStatus1 = {};\r\n\r\nconst addDataSource = (pars) => {\r\n\tpars = pars || {};\r\n\r\n\tlet id = pars.id;\r\n\tif (id) {\r\n\t\tlet hostName = pars.hostName;\r\n\t\t\r\n\t} else {\r\n\t\tconsole.warn('Warning: Specify layer \\'id\\' and \\'hostName\\`', pars);\r\n\t}\r\nconsole.log('addDataSource:', pars);\r\n\treturn;\r\n};\r\n\r\nconst removeDataSource = (pars) => {\r\n\tpars = pars || {};\r\n\r\n\tlet id = pars.id;\r\n\tif (id) {\r\n\t\tlet hostName = pars.hostName;\r\n\t\t\r\n\t} else {\r\n\t\tconsole.warn('Warning: Specify layer \\'id\\' and \\'hostName\\`', pars);\r\n\t}\r\nconsole.log('removeDataSource:', pars);\r\n\t//Requests.removeDataSource({id: message.layerID, hostName: message.hostName}).then((json) => {\r\n\treturn;\r\n};\r\nlet _maps = {};\r\nconst getMapTree = (pars) => {\r\n\tpars = pars || {};\r\n\tlet hostName = pars.hostName || 'maps.kosmosnimki.ru',\r\n\t\tid = pars.mapID;\r\n\treturn utils.getJson({\r\n\t\turl: '//' + hostName + '/Map/GetMapFolder',\r\n\t\t// options: {},\r\n\t\tparams: {\r\n\t\t\tsrs: 3857, \r\n\t\t\tskipTiles: 'All',\r\n\r\n\t\t\tmapId: id,\r\n\t\t\tfolderId: 'root',\r\n\t\t\tvisibleItemOnly: false\r\n\t\t}\r\n\t})\r\n\t\t// .then(function(json) {\r\n\t\t\t// let out = parseTree(json.res);\r\n\t\t\t// _maps[hostName] = _maps[hostName] || {};\r\n\t\t\t// _maps[hostName][id] = out;\r\n\t\t\t// return parseTree(out);\r\n\t\t// });\r\n};\r\n\r\nconst _iterateNodeChilds = (node, level, out) => {\r\n\tlevel = level || 0;\r\n\tout = out || {\r\n\t\tlayers: []\r\n\t};\r\n\t\r\n\tif (node) {\r\n\t\tlet type = node.type,\r\n\t\t\tcontent = node.content,\r\n\t\t\tprops = content.properties;\r\n\t\tif (type === 'layer') {\r\n\t\t\tlet ph = utils.parseLayerProps(props);\r\n\t\t\tph.level = level;\r\n\t\t\tif (content.geometry) { ph.geometry = content.geometry; }\r\n\t\t\tout.layers.push(ph);\r\n\t\t} else if (type === 'group') {\r\n\t\t\tlet childs = content.children || [];\r\n\t\t\tout.layers.push({ level: level, group: true, childsLen: childs.length, properties: props });\r\n\t\t\tchilds.map((it) => {\r\n\t\t\t\t_iterateNodeChilds(it, level + 1, out);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t} else {\r\n\t\treturn out;\r\n\t}\r\n\treturn out;\r\n};\r\n\r\nconst parseTree = (json) => {\r\n\tlet out = {};\r\n\tif (json.Status === 'error') {\r\n\t\tout = json;\r\n\t} else if (json.Result && json.Result.content) {\r\n\t\tout = _iterateNodeChilds(json.Result);\r\n\t\tout.mapAttr = out.layers.shift();\r\n\t}\r\n// console.log('______json_out_______', out, json)\r\n\treturn out;\r\n};\r\n*/\r\n\r\nconst chkSignal = (signalName, signals, opt) => {\r\n\topt = opt || {};\r\n\tlet sObj = signals[signalName];\r\n// console.log('sssssss', sObj, signalName)\r\n\tif (sObj) { sObj.abort(); }\r\n\tsObj = signals[signalName] = new AbortController();\r\n\tsObj.signal.addEventListener('abort', (ev) => console.log('Отмена fetch:', ev));\r\n\topt.signal = sObj.signal;\r\n\tsignals[signalName] = sObj;\r\n\treturn opt;\r\n};\r\n\r\nexport default {\r\n\tchkSignal,\r\n\tCOMPARS,\r\n\tsetSyncParams,\r\n\tgetSyncParams,\r\n\tparseURLParams,\r\n\t// getMapTree,\r\n\textend: utils.extend,\r\n\tgetBitMap: utils.getBitMap,\r\n\tgetFormBody: utils.getFormBody,\r\n\tgetTileJson: utils.getTileJson,\r\n\tgetJson: utils.getJson\r\n\t// addDataSource,\r\n\t// removeDataSource,\r\n\t// getReportsCount,\r\n\t// getLayerItems\r\n};","import DataWorker from 'web-worker:./worker';\r\nimport Requests from './worker/Requests.js';\r\nimport L from 'leaflet';\r\n\r\nconst dataWorker = new DataWorker();\nconst urlPars = Requests.parseURLParams();\n\t\tconsole.log('urlPars', urlPars);\n\r\nconst WORLDWIDTHFULL = 40075016.685578496,\r\n\tW = WORLDWIDTHFULL / 2,\r\n\t// WORLDBBOX = JSON.stringify([[-W, -W, W, W]]);\r\n\tWORLDBBOX = [[-W, -W, W, W]];\r\n//dataWorker.postMessage('Hello World!');\r\nconst Utils = {\r\n\r\n    getStyleAtlas: (styles) => {\r\n\t\tlet res = styles.map(st => {\r\n\t\t\tconst rst = st.RenderStyle,\r\n\t\t\t\tcancelProm = new Promise(resolve => resolve(null));\r\n            if (!rst || !rst.iconUrl) {\r\n\t\t\t\treturn cancelProm;\r\n\t\t\t} else {\r\n\t\t\t\treturn fetch(rst.iconUrl, {mode: 'cors', type: 'bitmap'})\r\n\t\t\t\t\t.then(req => req.blob())\r\n\t\t\t\t\t// .then(blob => createImageBitmap(blob, { premultiplyAlpha: 'none', colorSpaceConversion: 'none', }))\r\n\t\t\t\t\t.catch((err) => { console.warn(err); return cancelProm;});\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn Promise.all(res).then(arr => {\r\n\t\t\tconsole.log('getStyleAtlas', arr);\r\n\t\t});\r\n\r\n// async function loadNextImage() {\r\n  // const url = `${imageUrls[imgNdx]}?cachebust=${performance.now()}`;\r\n  // imgNdx = (imgNdx + 1) % imageUrls.length;\r\n  // const res = await fetch(url, {mode: 'cors'});\r\n  // const blob = await res.blob();\r\n  // const bitmap = await createImageBitmap(blob, {\r\n    // premultiplyAlpha: 'none',\r\n    // colorSpaceConversion: 'none',\r\n  // });\r\n  // if (update) {\r\n    // gl.bindTexture(gl.TEXTURE_2D, tex);\r\n    // gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, bitmap);\r\n    // imgAspect = bitmap.width / bitmap.height;\r\n  // }\r\n  // setTimeout(loadNextImage, 1000);\r\n// }\r\n    },\r\n\r\n\tgetBboxes: function(map) {\r\n\t\tif (map.options.allWorld) {\r\n\t\t\treturn WORLDBBOX;\r\n\t\t}\r\n\t\tlet bbox = map.getBounds(),\r\n\t\t\tne = bbox.getNorthEast(),\r\n\t\t\tsw = bbox.getSouthWest();\r\n\t\tif ((ne.lng - sw.lng) > 180) {\r\n\t\t\treturn WORLDBBOX;\r\n\t\t}\r\n\t\tlet zoom = map.getZoom(),\r\n\t\t\tts = L.gmxUtil.tileSizes[zoom],\r\n\t\t\tpb = {x: ts, y: ts},\r\n\t\t\tmbbox = L.bounds(\r\n\t\t\t\tL.CRS.EPSG3857.project(sw)._subtract(pb),\r\n\t\t\t\tL.CRS.EPSG3857.project(ne)._add(pb)\r\n\t\t\t),\r\n\r\n\t\t\tminY = mbbox.min.y, maxY = mbbox.max.y,\r\n\t\t\tminX = mbbox.min.x, maxX = mbbox.max.x,\r\n\t\t\tminX1 = null, maxX1 = null,\r\n\t\t\tww = WORLDWIDTHFULL,\r\n\t\t\tsize = mbbox.getSize(),\r\n\t\t\tout = [];\r\n\r\n\t\tif (size.x > ww) {\r\n\t\t\treturn WORLDBBOX;\r\n\t\t}\r\n\r\n\t\tif (maxX > W || minX < -W) {\r\n\t\t\tvar hs = size.x / 2,\r\n\t\t\t\tcenter = ((maxX + minX) / 2) % ww;\r\n\r\n\t\t\tcenter = center + (center > W ? -ww : (center < -W ? ww : 0));\r\n\t\t\tminX = center - hs; maxX = center + hs;\r\n\t\t\tif (minX < -W) {\r\n\t\t\t\tminX1 = minX + ww; maxX1 = W; minX = -W;\r\n\t\t\t} else if (maxX > W) {\r\n\t\t\t\tminX1 = -W; maxX1 = maxX - ww; maxX = W;\r\n\t\t\t}\r\n\t\t}\r\n\t\tout.push([minX, minY, maxX, maxY]);\r\n\r\n\t\tif (minX1) {\r\n\t\t\tout.push([minX1, minY, maxX1, maxY]);\r\n\t\t}\r\n\t\treturn out;\r\n\t\t// return JSON.stringify(out);\r\n\t},\r\n\r\n\tsetSyncParams: (syncParams) => {\r\n\t\tsyncParams = syncParams || {};\r\n\t\tdataWorker.onmessage = (res) => {\r\n\t\t\tif (res.data.cmd === 'setSyncParams') {\r\n\t\t\t\tconsole.log('onmessage setSyncParams ', res);\r\n\t\t\t}\r\n\t\t};\r\n\t\tdataWorker.postMessage({cmd: 'setSyncParams', syncParams: syncParams});\r\n\t},\r\n\tgetSyncParams: (stringFlag) => {\r\n        return new Promise((resolve) => {\r\n\t\t\tdataWorker.onmessage = (res) => {\r\n\t\t\t\tif (res.data.cmd === 'getSyncParams') {\r\n\t\t\t\t\tresolve(res.data.syncParams);\r\n\t\t\t\t\tconsole.log('onmessage getSyncParams ', res);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tdataWorker.postMessage({cmd: 'getSyncParams', stringFlag: stringFlag});\r\n\t\t});\r\n\t},\r\n\tsetDateInterval: (dateInterval, id, hostName) => {\r\n\t\tconsole.log('setDateInterval', dateInterval, id, hostName)\r\n\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tdataWorker.onmessage = (res) => {\r\n\t\t\t\tif (res.data.cmd === 'setDateInterval') { resolve(res.data); }\r\n\t\t\t};\r\n\t\t\tdataWorker.postMessage({\r\n\t\t\t\tcmd: 'setDateInterval',\r\n\t\t\t\tid: id,\r\n\t\t\t\thostName: hostName || 'maps.kosmosnimki.ru',\r\n\t\t\t\tdateBegin: Math.floor(dateInterval.beginDate.getTime() / 1000),\r\n\t\t\t\tdateEnd: Math.floor(dateInterval.endDate.getTime() / 1000)\r\n\t\t\t});\r\n\t\t});\r\n\t},\r\n\tgetMap: (opt) => {\r\n\t\topt = opt || {};\r\n        return new Promise((resolve) => {\r\n\t\t\tlet mapID = urlPars.main.length ? urlPars.main[0] : opt.mapID;\r\n\t\t\t// let mapID = urlPars.main.length ? urlPars.main[0] : opt.mapID, hostName: opt.hostName, search: location.search});\r\n\r\n\t\t\tdataWorker.onmessage = (res) => {\r\n\t\t\t\tlet data = res.data,\r\n\t\t\t\t\tcmd = data.cmd,\r\n\t\t\t\t\tjson = data.out;\r\n\r\n\t\t\t\tif (cmd === 'getMap') {\r\n\t\t\t\t\tresolve(json);\r\n\t\t\t\t}\r\n\t\tconsole.log('getMap _____________', json);\r\n\t\t\t};\r\n\t\t\tdataWorker.postMessage({\r\n\t\t\t\tcmd: 'getMap',\r\n\t\t\t\tmapID: mapID\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n};\r\n\nL.Map.addInitHook(function () {\n\tlet map = this;\n\tmap\n\t\t.on('layeradd', (ev) => {\n\t\t\tif (ev.layer._gmx) {\r\n\t\t\t\tlet layer = ev.layer,\r\n\t\t\t\t\t// gmxProps = layer.getGmxProperties(),\r\n\t\t\t\t\t_gmx = layer._gmx,\r\n\t\t\t\t\tdm = layer.getDataManager(),\r\n\t\t\t\t\topt = dm.options,\r\n\t\t\t\t\tid = opt.name,\r\n\t\t\t\t\thostName = opt.hostName,\r\n\t\t\t\t\tdtInterval = dm.getMaxDateInterval(),\r\n\t\t\t\t\tbeginDate = dtInterval.beginDate || _gmx.beginDate,\r\n\t\t\t\t\tendDate = dtInterval.endDate || _gmx.endDate,\r\n\t\t\t\t\tpars = {\r\n\t\t\t\t\t\tcmd: 'addDataSource',\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\tvid: _gmx.layerID,\r\n\t\t\t\t\t\tvHostName: _gmx.hostName,\r\n\t\t\t\t\t\t// v: opt.LayerVersion,\r\n\t\t\t\t\t\t// gmxStyles: gmxProps.gmxStyles,\r\n\t\t\t\t\t\thostName: hostName,\r\n\t\t\t\t\t\tbbox: Utils.getBboxes(map),\r\n\t\t\t\t\t\tzoom: map.getZoom()\r\n\t\t\t\t\t};\r\n\t\t\t\tif (window.apiKey && hostName === 'maps.kosmosnimki.ru') {\r\n\t\t\t\t\tpars.apiKey = window.apiKey;\r\n\t\t\t\t}\r\n\t\t\t\tif (beginDate) {\r\n\t\t\t\t\tpars.dateBegin = Math.floor(beginDate.getTime() / 1000);\r\n\t\t\t\t}\r\n\t\t\t\tif (endDate) {\r\n\t\t\t\t\tpars.dateEnd = Math.floor(endDate.getTime() / 1000);\r\n\t\t\t\t}\r\n\t\t\t\tif (map.options.generalized === false) {\r\n\t\t\t\t\tpars.generalizedTiles = false;\r\n\t\t\t\t}\r\n\t\t\t\tlet arr = layer.getStyles();\r\nconsole.log('layeradd styles', arr, Utils.getStyleAtlas(arr));\r\n\r\n\n\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\tif (_gmx) {\n\t\t\t\t\t\tdataWorker.onmessage = (res) => {\n\t\t\t\t\t\t\tlet data = res.data,\n\t\t\t\t\t\t\t\tcmd = data.cmd,\n\t\t\t\t\t\t\t\tjson = data.out;\n\n\t\t\t\t\t\t\tif (cmd === 'addDataSource') {\n\t\t\t\t\t\t\t\tresolve(json);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdataWorker.postMessage(pars);\r\n\t\t\t\t\t\tdm.on('onDateInterval', (ev) => {\r\n\t\t\t\t\t\t\tUtils.setDateInterval({beginDate: ev.beginDate, endDate: ev.endDate}, id, hostName);\r\n\t\t\t\t\t\t});\r\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({error: 'Not Geomixer layer'});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\r\n\t\t})\r\n\t\t.on('moveend', () => {\r\n\t\t\tdataWorker.postMessage({\r\n\t\t\t\tcmd: 'moveend',\r\n\t\t\t\tbbox: Utils.getBboxes(map),\r\n\t\t\t\tzoom: map.getZoom()\r\n\t\t\t});\r\n\t\t})\r\n\t\t.on('layerremove', (ev) => {\r\n\t// console.log('layerremove', ev);\n\t\t\tlet it = ev.layer,\n\t\t\t\t_gmx = it._gmx;\n\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tif (_gmx) {\n\t\t\t\t\tdataWorker.onmessage = (res) => {\n\t\t\t\t\t\tlet data = res.data,\n\t\t\t\t\t\t\tcmd = data.cmd,\n\t\t\t\t\t\t\tjson = data.out;\n\n\t\t\t\t\t\tif (cmd === 'removeDataSource') {\n\t\t\t\t\t\t\tresolve(json);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tdataWorker.postMessage({cmd: 'removeDataSource', id: _gmx.layerID, hostName: _gmx.hostName});\n\t\t\t\t} else {\n\t\t\t\t\tresolve({error: 'Not Geomixer layer'});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\tUtils.getMap()\n\t\t.then('cccccccccccccc', console.log)\n\n});\r\n\nL.gmxWorker = Utils;\r\n\r\nexport {dataWorker, Utils};"],"names":["_self","self","window","str","location","origin","_protocol","substring","indexOf","syncParams","fetchOptions","mode","credentials","COMPARS","WrapStyle","ftc","srs","setSyncParams","hash","getSyncParams","stringFlag","res","arr","key","push","join","parseURLParams","sp","URLSearchParams","search","out","p","k","z","main","keys","utils","extend","dest","i","j","len","src","arguments","length","makeTileKeys","it","ptiles","tklen","tilesOrder","tiles","newTiles","t","splice","tk","tile","data","tp","x","y","v","s","d","getZoomRange","info","properties","styles","st","Math","min","MinZoom","max","MaxZoom","chkProtocol","url","substr","getFormBody","par","Object","map","encodeURIComponent","chkResponse","resp","type","status","Promise","reject","contentType","headers","get","blob","json","text","getBitMap","options","fetch","then","getTileJson","queue","params","paramsArr","forEach","getJson","opt","method","body","load","catch","err","error","toString","chkSignal","signalName","signals","sObj","abort","AbortController","signal","addEventListener","ev","console","log","dataWorker","DataWorker","urlPars","Requests","WORLDWIDTHFULL","W","WORLDBBOX","Utils","getStyleAtlas","rst","RenderStyle","cancelProm","resolve","iconUrl","req","warn","all","getBboxes","allWorld","bbox","getBounds","ne","getNorthEast","sw","getSouthWest","lng","zoom","getZoom","ts","L","gmxUtil","tileSizes","pb","mbbox","bounds","CRS","EPSG3857","project","_subtract","_add","minY","maxY","minX","maxX","minX1","maxX1","ww","size","getSize","hs","center","onmessage","cmd","postMessage","setDateInterval","dateInterval","id","hostName","dateBegin","floor","beginDate","getTime","dateEnd","endDate","getMap","mapID","Map","addInitHook","on","layer","_gmx","dm","getDataManager","name","dtInterval","getMaxDateInterval","pars","vid","layerID","vHostName","apiKey","generalized","generalizedTiles","getStyles","gmxWorker"],"mappings":"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"}